!function(a){function e(i){if(n[i])return n[i].exports;var t=n[i]={exports:{},id:i,loaded:!1};return a[i].call(t.exports,t,t.exports,e),t.loaded=!0,t.exports}var n={};return e.m=a,e.c=n,e.p="",e(0)}([function(a,e,n){var i=angular.module("visualizationModule",["ngMaterial","ngMessages","ngAnimate"]);n(1)(i),n(4)(i),n(11)(i),n(13)(i),n(15)(i),$(function(){console.log("Initialisation")})},function(a,e,n){var i=n(2);a.exports=function(a){var e=n(3)({autosend:!1,destinationUrl:i.DESTINATION_URL,authorization:i.AUTHORIZATION});a.factory("stats",function(){return e})}},function(a,e){a.exports={PORT:3e3,PG_USER:"postgres",PG_SECRET:"postgres",PG_DATABASE:"Stats",PG_PORT:"5432",AUTHORIZATION:"DK5I4-0yl9N2KN64Pg5YcEAsdnCXeamr",ACCES_CONTROL_ALLOW_ORIGN:"*",ACCESS_CONTROL_ALLOW_HEADERS:"Origin, X-Requested-With, Content-Type, Accept, Authorization",DESTINATION_URL:"https://im.silverpeas.net/stats"}},function(a,e){var n=function(a){if(!a||!a.destinationUrl)throw"You must specify destination";var e={destinationUrl:"http://127.0.0.1:3000",autosend:!1,interval:3e3,authorization:"secretkey"};if(this.options=$.extend(e,a),this.options.persistenceUrl=a.destinationUrl+"/persist",this.options.readUrl=a.destinationUrl+"/data",this.buffer=[],a.autosend===!0){var n=this;setInterval(function(){n.sendDataBuffer()},a.interval)}};n.prototype.addEvent=function(a,e){this.buffer.push({event:a,data:e})},n.prototype.sendDataBuffer=function(){var a=this;if(!(Object.keys(a.buffer).length<1)){var e={url:a.options.persistenceUrl,type:"POST",dataType:"json",data:JSON.stringify(a.buffer),headers:{Authorization:a.options.authorization,"Content-Type":"application/json"}};return"undefined"!=typeof headers&&$.extend(e.headers,headers),$.ajax(e).done(function(){a.buffer=[]}).fail(function(){console.log("fail sending buffer"),console.log(arguments)})}},n.prototype.getEventList=function(){var a=this,e={url:a.options.readUrl+"/event/list",type:"POST",headers:{Authorization:a.options.authorization,"Content-Type":"application/json"}};return $.ajax(e)},n.prototype.getEventResume=function(){var a=this,e={url:a.options.readUrl+"/event/resume",type:"POST",headers:{Authorization:a.options.authorization,"Content-Type":"application/json"}};return $.ajax(e)},n.prototype.getEventTimeline=function(){var a=this,e={url:a.options.readUrl+"/event/timeline/hours",type:"POST",headers:{Authorization:a.options.authorization,"Content-Type":"application/json"}};return $.ajax(e)},"undefined"!=typeof a&&a.exports&&(a.exports=function(a){return new n(a)})},function(a,e,n){var i=n(5),t=(n(6),function(a,e){this.id="timeLine_"+(new Date).getTime(),this.title="Timeline";var n=this;e.getEventTimeline().then(function(e){var i=[],t=[];$.each(e,function(a,e){i.push(e.date),t.push(e.event_number)});new Chart($("#"+n.id),{type:"line",data:{labels:i,datasets:[{label:"Timeline",data:t,borderColor:"rgba(75,192,192,1)",borderCapStyle:"butt"}]},options:{}});a.$apply()}).fail(function(a){console.log(a)})});t.$inject=["$scope","stats"],a.exports=function(a){a.component("timeline",{template:i,controller:t,bindings:{}})}},function(a,e){a.exports='\n\n<div class="pieChartContainer">\n\n  <h2>{{$ctrl.title}}</h2>\n\n  <canvas id="{{$ctrl.id}}" style="width: 400px; height: 400px;"></canvas>\n\n</div>'},function(a,e,n){var i,t;(function(n){!function(){function r(a){if(!(this instanceof r))return null==a?new r:new r(a);if("function"==typeof a)return this.random=a,this;arguments.length&&(this.seed=0);for(var e=0;e<arguments.length;e++){var n=0;if("[object String]"===Object.prototype.toString.call(arguments[e]))for(var i=0;i<arguments[e].length;i++){for(var t=0,o=0;o<arguments[e].length;o++)t=arguments[e].charCodeAt(o)+(t<<6)+(t<<16)-t;n+=t}else n=arguments[e];this.seed+=(arguments.length-e)*n}return this.mt=this.mersenne_twister(this.seed),this.bimd5=this.blueimp_md5(),this.random=function(){return this.mt.random(this.seed)},this}function o(a,e){if(a||(a={}),e)for(var n in e)"undefined"==typeof a[n]&&(a[n]=e[n]);return a}function s(a,e){if(a)throw new RangeError(e)}function l(a){return function(){return this.natural(a)}}function m(a,e){for(var n,i=B(a),t=0,r=i.length;t<r;t++)n=i[t],e[n]=a[n]||e[n]}function c(a,e){for(var n=0,i=a.length;n<i;n++)e[n]=a[n]}function h(a,e){var n=Array.isArray(a),i=e||(n?new Array(a.length):{});return n?c(a,i):m(a,i),i}var u=9007199254740992,b=-u,d="0123456789",p="abcdefghijklmnopqrstuvwxyz",f=p.toUpperCase(),v=d+"abcdef",g=Array.prototype.slice;r.prototype.VERSION="1.0.3";var y=function(){throw new Error("No Base64 encoder available.")};!function(){"function"==typeof btoa?y=btoa:"function"==typeof n&&(y=function(a){return new n(a).toString("base64")})}(),r.prototype.bool=function(a){return a=o(a,{likelihood:50}),s(a.likelihood<0||a.likelihood>100,"Chance: Likelihood accepts values from 0 to 100."),100*this.random()<a.likelihood},r.prototype.character=function(a){a=o(a),s(a.alpha&&a.symbols,"Chance: Cannot specify both alpha and symbols.");var e,n,i="!@#$%^&*()[]";return e="lower"===a.casing?p:"upper"===a.casing?f:p+f,n=a.pool?a.pool:a.alpha?e:a.symbols?i:e+d+i,n.charAt(this.natural({max:n.length-1}))},r.prototype.floating=function(a){a=o(a,{fixed:4}),s(a.fixed&&a.precision,"Chance: Cannot specify both fixed and precision.");var e,n=Math.pow(10,a.fixed),i=u/n,t=-i;s(a.min&&a.fixed&&a.min<t,"Chance: Min specified is out of range with fixed. Min should be, at least, "+t),s(a.max&&a.fixed&&a.max>i,"Chance: Max specified is out of range with fixed. Max should be, at most, "+i),a=o(a,{min:t,max:i}),e=this.integer({min:a.min*n,max:a.max*n});var r=(e/n).toFixed(a.fixed);return parseFloat(r)},r.prototype.integer=function(a){return a=o(a,{min:b,max:u}),s(a.min>a.max,"Chance: Min cannot be greater than Max."),Math.floor(this.random()*(a.max-a.min+1)+a.min)},r.prototype.natural=function(a){return a=o(a,{min:0,max:u}),s(a.min<0,"Chance: Min cannot be less than zero."),this.integer(a)},r.prototype.string=function(a){a=o(a,{length:this.natural({min:5,max:20})}),s(a.length<0,"Chance: Length cannot be less than zero.");var e=a.length,n=this.n(this.character,e,a);return n.join("")},r.prototype.capitalize=function(a){return a.charAt(0).toUpperCase()+a.substr(1)},r.prototype.mixin=function(a){for(var e in a)r.prototype[e]=a[e];return this},r.prototype.unique=function(a,e,n){s("function"!=typeof a,"Chance: The first argument must be a function.");var i=function(a,e){return a.indexOf(e)!==-1};n&&(i=n.comparator||i);for(var t,r=[],o=0,l=50*e,m=g.call(arguments,2);r.length<e;){var c=JSON.parse(JSON.stringify(m));if(t=a.apply(this,c),i(r,t)||(r.push(t),o=0),++o>l)throw new RangeError("Chance: num is likely too large for sample set")}return r},r.prototype.n=function(a,e){s("function"!=typeof a,"Chance: The first argument must be a function."),"undefined"==typeof e&&(e=1);var n=e,i=[],t=g.call(arguments,2);for(n=Math.max(0,n),null;n--;null)i.push(a.apply(this,t));return i},r.prototype.pad=function(a,e,n){return n=n||"0",a+="",a.length>=e?a:new Array(e-a.length+1).join(n)+a},r.prototype.pick=function(a,e){if(0===a.length)throw new RangeError("Chance: Cannot pick() from an empty array");return e&&1!==e?this.shuffle(a).slice(0,e):a[this.natural({max:a.length-1})]},r.prototype.pickone=function(a){if(0===a.length)throw new RangeError("Chance: Cannot pickone() from an empty array");return a[this.natural({max:a.length-1})]},r.prototype.pickset=function(a,e){if(0===e)return[];if(0===a.length)throw new RangeError("Chance: Cannot pickset() from an empty array");if(e<0)throw new RangeError("Chance: count must be positive number");return e&&1!==e?this.shuffle(a).slice(0,e):[this.pickone(a)]},r.prototype.shuffle=function(a){for(var e=a.slice(0),n=[],i=0,t=Number(e.length),r=0;r<t;r++)i=this.natural({max:e.length-1}),n[r]=e[i],e.splice(i,1);return n},r.prototype.weighted=function(a,e,n){if(a.length!==e.length)throw new RangeError("Chance: length of array and weights must match");for(var i,t=0,r=0;r<e.length;++r)i=e[r],i>0&&(t+=i);if(0===t)throw new RangeError("Chance: no valid entries in array weights");var o,s=this.random()*t,l=0,m=-1;for(r=0;r<e.length;++r){if(i=e[r],l+=i,i>0){if(s<=l){o=r;break}m=r}r===e.length-1&&(o=m)}var c=a[o];return n="undefined"!=typeof n&&n,n&&(a.splice(o,1),e.splice(o,1)),c},r.prototype.paragraph=function(a){a=o(a);var e=a.sentences||this.natural({min:3,max:7}),n=this.n(this.sentence,e);return n.join(" ")},r.prototype.sentence=function(a){a=o(a);var e,n=a.words||this.natural({min:12,max:18}),i=a.punctuation,t=this.n(this.word,n);return e=t.join(" "),e=this.capitalize(e),i===!1||/^[\.\?;!:]$/.test(i)||(i="."),i&&(e+=i),e},r.prototype.syllable=function(a){a=o(a);for(var e,n=a.length||this.natural({min:2,max:3}),i="bcdfghjklmnprstvwz",t="aeiou",r=i+t,s="",l=0;l<n;l++)e=0===l?this.character({pool:r}):i.indexOf(e)===-1?this.character({pool:i}):this.character({pool:t}),s+=e;return a.capitalize&&(s=this.capitalize(s)),s},r.prototype.word=function(a){a=o(a),s(a.syllables&&a.length,"Chance: Cannot specify both syllables AND length.");var e=a.syllables||this.natural({min:1,max:3}),n="";if(a.length){do n+=this.syllable();while(n.length<a.length);n=n.substring(0,a.length)}else for(var i=0;i<e;i++)n+=this.syllable();return a.capitalize&&(n=this.capitalize(n)),n},r.prototype.age=function(a){a=o(a);var e;switch(a.type){case"child":e={min:1,max:12};break;case"teen":e={min:13,max:19};break;case"adult":e={min:18,max:65};break;case"senior":e={min:65,max:100};break;case"all":e={min:1,max:100};break;default:e={min:18,max:65}}return this.natural(e)},r.prototype.birthday=function(a){return a=o(a,{year:(new Date).getFullYear()-this.age(a)}),this.date(a)},r.prototype.cpf=function(){var a=this.n(this.natural,9,{max:9}),e=2*a[8]+3*a[7]+4*a[6]+5*a[5]+6*a[4]+7*a[3]+8*a[2]+9*a[1]+10*a[0];e=11-e%11,e>=10&&(e=0);var n=2*e+3*a[8]+4*a[7]+5*a[6]+6*a[5]+7*a[4]+8*a[3]+9*a[2]+10*a[1]+11*a[0];return n=11-n%11,n>=10&&(n=0),""+a[0]+a[1]+a[2]+"."+a[3]+a[4]+a[5]+"."+a[6]+a[7]+a[8]+"-"+e+n},r.prototype.cnpj=function(){var a=this.n(this.natural,12,{max:12}),e=2*a[11]+3*a[10]+4*a[9]+5*a[8]+6*a[7]+7*a[6]+8*a[5]+9*a[4]+2*a[3]+3*a[2]+4*a[1]+5*a[0];e=11-e%11,e<2&&(e=0);var n=2*e+3*a[11]+4*a[10]+5*a[9]+6*a[8]+7*a[7]+8*a[6]+9*a[5]+2*a[4]+3*a[3]+4*a[2]+5*a[1]+6*a[0];return n=11-n%11,n<2&&(n=0),""+a[0]+a[1]+"."+a[2]+a[3]+a[4]+"."+a[5]+a[6]+a[7]+"/"+a[8]+a[9]+a[10]+a[11]+"-"+e+n},r.prototype.first=function(a){return a=o(a,{gender:this.gender(),nationality:"en"}),this.pick(this.get("firstNames")[a.gender.toLowerCase()][a.nationality.toLowerCase()])},r.prototype.gender=function(){return this.pick(["Male","Female"])},r.prototype.last=function(a){return a=o(a,{nationality:"en"}),this.pick(this.get("lastNames")[a.nationality.toLowerCase()])},r.prototype.israelId=function(){for(var a=this.string({pool:"0123456789",length:8}),e=0,n=0;n<a.length;n++){var i=a[n]*(n/2===parseInt(n/2)?1:2);i=this.pad(i,2).toString(),i=parseInt(i[0])+parseInt(i[1]),e+=i}return a+=(10-parseInt(e.toString().slice(-1))).toString().slice(-1)},r.prototype.mrz=function(a){var e=function(a){var e="<ABCDEFGHIJKLMNOPQRSTUVWXYXZ".split(""),n=[7,3,1],i=0;return"string"!=typeof a&&(a=a.toString()),a.split("").forEach(function(a,t){var r=e.indexOf(a);a=r!==-1?0===r?0:r+9:parseInt(a,10),a*=n[t%n.length],i+=a}),i%10},n=function(a){var n=function(a){return new Array(a+1).join("<")},i=["P<",a.issuer,a.last.toUpperCase(),"<<",a.first.toUpperCase(),n(39-(a.last.length+a.first.length+2)),a.passportNumber,e(a.passportNumber),a.nationality,a.dob,e(a.dob),a.gender,a.expiry,e(a.expiry),n(14),e(n(14))].join("");return i+e(i.substr(44,10)+i.substr(57,7)+i.substr(65,7))},i=this;return a=o(a,{first:this.first(),last:this.last(),passportNumber:this.integer({min:1e8,max:999999999}),dob:function(){var a=i.birthday({type:"adult"});return[a.getFullYear().toString().substr(2),i.pad(a.getMonth()+1,2),i.pad(a.getDate(),2)].join("")}(),expiry:function(){var a=new Date;return[(a.getFullYear()+5).toString().substr(2),i.pad(a.getMonth()+1,2),i.pad(a.getDate(),2)].join("")}(),gender:"Female"===this.gender()?"F":"M",issuer:"GBR",nationality:"GBR"}),n(a)},r.prototype.name=function(a){a=o(a);var e,n=this.first(a),i=this.last(a);return e=a.middle?n+" "+this.first(a)+" "+i:a.middle_initial?n+" "+this.character({alpha:!0,casing:"upper"})+". "+i:n+" "+i,a.prefix&&(e=this.prefix(a)+" "+e),a.suffix&&(e=e+" "+this.suffix(a)),e},r.prototype.name_prefixes=function(a){a=a||"all",a=a.toLowerCase();var e=[{name:"Doctor",abbreviation:"Dr."}];return"male"!==a&&"all"!==a||e.push({name:"Mister",abbreviation:"Mr."}),"female"!==a&&"all"!==a||(e.push({name:"Miss",abbreviation:"Miss"}),e.push({name:"Misses",abbreviation:"Mrs."})),e},r.prototype.prefix=function(a){return this.name_prefix(a)},r.prototype.name_prefix=function(a){return a=o(a,{gender:"all"}),a.full?this.pick(this.name_prefixes(a.gender)).name:this.pick(this.name_prefixes(a.gender)).abbreviation},r.prototype.ssn=function(a){a=o(a,{ssnFour:!1,dashes:!0});var e,n="1234567890",i=a.dashes?"-":"";return e=a.ssnFour?this.string({pool:n,length:4}):this.string({pool:n,length:3})+i+this.string({pool:n,length:2})+i+this.string({pool:n,length:4})},r.prototype.name_suffixes=function(){var a=[{name:"Doctor of Osteopathic Medicine",abbreviation:"D.O."},{name:"Doctor of Philosophy",abbreviation:"Ph.D."},{name:"Esquire",abbreviation:"Esq."},{name:"Junior",abbreviation:"Jr."},{name:"Juris Doctor",abbreviation:"J.D."},{name:"Master of Arts",abbreviation:"M.A."},{name:"Master of Business Administration",abbreviation:"M.B.A."},{name:"Master of Science",abbreviation:"M.S."},{name:"Medical Doctor",abbreviation:"M.D."},{name:"Senior",abbreviation:"Sr."},{name:"The Third",abbreviation:"III"},{name:"The Fourth",abbreviation:"IV"},{name:"Bachelor of Engineering",abbreviation:"B.E"},{name:"Bachelor of Technology",abbreviation:"B.TECH"}];return a},r.prototype.suffix=function(a){return this.name_suffix(a)},r.prototype.name_suffix=function(a){return a=o(a),a.full?this.pick(this.name_suffixes()).name:this.pick(this.name_suffixes()).abbreviation},r.prototype.nationalities=function(){return this.get("nationalities")},r.prototype.nationality=function(){var a=this.pick(this.nationalities());return a.name},r.prototype.android_id=function(){return"APA91"+this.string({pool:"0123456789abcefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_",length:178})},r.prototype.apple_token=function(){return this.string({pool:"abcdef1234567890",length:64})},r.prototype.wp8_anid2=function(){return y(this.hash({length:32}))},r.prototype.wp7_anid=function(){return"A="+this.guid().replace(/-/g,"").toUpperCase()+"&E="+this.hash({length:3})+"&W="+this.integer({min:0,max:9})},r.prototype.bb_pin=function(){return this.hash({length:8})},r.prototype.avatar=function(a){var e=null,n="//www.gravatar.com/avatar/",i={http:"http",https:"https"},t={bmp:"bmp",gif:"gif",jpg:"jpg",png:"png"},r={404:"404",mm:"mm",identicon:"identicon",monsterid:"monsterid",wavatar:"wavatar",retro:"retro",blank:"blank"},s={g:"g",pg:"pg",r:"r",x:"x"},l={protocol:null,email:null,fileExtension:null,size:null,fallback:null,rating:null};if(a)if("string"==typeof a)l.email=a,a={};else{if("object"!=typeof a)return null;if("Array"===a.constructor)return null}else l.email=this.email(),a={};return l=o(a,l),l.email||(l.email=this.email()),l.protocol=i[l.protocol]?l.protocol+":":"",l.size=parseInt(l.size,0)?l.size:"",l.rating=s[l.rating]?l.rating:"",l.fallback=r[l.fallback]?l.fallback:"",l.fileExtension=t[l.fileExtension]?l.fileExtension:"",e=l.protocol+n+this.bimd5.md5(l.email)+(l.fileExtension?"."+l.fileExtension:"")+(l.size||l.rating||l.fallback?"?":"")+(l.size?"&s="+l.size.toString():"")+(l.rating?"&r="+l.rating:"")+(l.fallback?"&d="+l.fallback:"")},r.prototype.color=function(a){function e(a,e){return[a,a,a].join(e||"")}function n(a){var n=a?"rgba":"rgb",i=a?","+this.floating({min:0,max:1}):"",t=r?e(this.natural({max:255}),","):this.natural({max:255})+","+this.natural({max:255})+","+this.natural({max:255});return n+"("+t+i+")"}function i(a,n,i){var t=i?"#":"",o=r?e(this.hash({length:a})):this.hash({length:n});return t+o}a=o(a,{format:this.pick(["hex","shorthex","rgb","rgba","0x","name"]),grayscale:!1,casing:"lower"});var t,r=a.grayscale;if("hex"===a.format)t=i.call(this,2,6,!0);else if("shorthex"===a.format)t=i.call(this,1,3,!0);else if("rgb"===a.format)t=n.call(this,!1);else if("rgba"===a.format)t=n.call(this,!0);else{if("0x"!==a.format){if("name"===a.format)return this.pick(this.get("colorNames"));throw new RangeError('Invalid format provided. Please provide one of "hex", "shorthex", "rgb", "rgba", "0x" or "name".')}t="0x"+i.call(this,2,6)}return"upper"===a.casing&&(t=t.toUpperCase()),t},r.prototype.domain=function(a){return a=o(a),this.word()+"."+(a.tld||this.tld())},r.prototype.email=function(a){return a=o(a),this.word({length:a.length})+"@"+(a.domain||this.domain())},r.prototype.fbid=function(){return parseInt("10000"+this.natural({max:1e11}),10)},r.prototype.google_analytics=function(){var a=this.pad(this.natural({max:999999}),6),e=this.pad(this.natural({max:99}),2);return"UA-"+a+"-"+e},r.prototype.hashtag=function(){return"#"+this.word()},r.prototype.ip=function(){return this.natural({min:1,max:254})+"."+this.natural({max:255})+"."+this.natural({max:255})+"."+this.natural({min:1,max:254})},r.prototype.ipv6=function(){var a=this.n(this.hash,8,{length:4});return a.join(":")},r.prototype.klout=function(){return this.natural({min:1,max:99})},r.prototype.semver=function(a){a=o(a,{include_prerelease:!0});var e=this.pickone(["^","~","<",">","<=",">=","="]);a.range&&(e=a.range);var n="";return a.include_prerelease&&(n=this.weighted(["","-dev","-beta","-alpha"],[50,10,5,1])),e+this.rpg("3d10").join(".")+n},r.prototype.tlds=function(){return["com","org","edu","gov","co.uk","net","io","ac","ad","ae","af","ag","ai","al","am","an","ao","aq","ar","as","at","au","aw","ax","az","ba","bb","bd","be","bf","bg","bh","bi","bj","bm","bn","bo","bq","br","bs","bt","bv","bw","by","bz","ca","cc","cd","cf","cg","ch","ci","ck","cl","cm","cn","co","cr","cu","cv","cw","cx","cy","cz","de","dj","dk","dm","do","dz","ec","ee","eg","eh","er","es","et","eu","fi","fj","fk","fm","fo","fr","ga","gb","gd","ge","gf","gg","gh","gi","gl","gm","gn","gp","gq","gr","gs","gt","gu","gw","gy","hk","hm","hn","hr","ht","hu","id","ie","il","im","in","io","iq","ir","is","it","je","jm","jo","jp","ke","kg","kh","ki","km","kn","kp","kr","kw","ky","kz","la","lb","lc","li","lk","lr","ls","lt","lu","lv","ly","ma","mc","md","me","mg","mh","mk","ml","mm","mn","mo","mp","mq","mr","ms","mt","mu","mv","mw","mx","my","mz","na","nc","ne","nf","ng","ni","nl","no","np","nr","nu","nz","om","pa","pe","pf","pg","ph","pk","pl","pm","pn","pr","ps","pt","pw","py","qa","re","ro","rs","ru","rw","sa","sb","sc","sd","se","sg","sh","si","sj","sk","sl","sm","sn","so","sr","ss","st","su","sv","sx","sy","sz","tc","td","tf","tg","th","tj","tk","tl","tm","tn","to","tp","tr","tt","tv","tw","tz","ua","ug","uk","us","uy","uz","va","vc","ve","vg","vi","vn","vu","wf","ws","ye","yt","za","zm","zw"]},r.prototype.tld=function(){return this.pick(this.tlds())},r.prototype.twitter=function(){return"@"+this.word()},r.prototype.url=function(a){a=o(a,{protocol:"http",domain:this.domain(a),domain_prefix:"",path:this.word(),extensions:[]});var e=a.extensions.length>0?"."+this.pick(a.extensions):"",n=a.domain_prefix?a.domain_prefix+"."+a.domain:a.domain;return a.protocol+"://"+n+"/"+a.path+e},r.prototype.address=function(a){return a=o(a),this.natural({min:5,max:2e3})+" "+this.street(a)},r.prototype.altitude=function(a){return a=o(a,{fixed:5,min:0,max:8848}),this.floating({min:a.min,max:a.max,fixed:a.fixed})},r.prototype.areacode=function(a){a=o(a,{parens:!0});var e=this.natural({min:2,max:9}).toString()+this.natural({min:0,max:8}).toString()+this.natural({min:0,max:9}).toString();return a.parens?"("+e+")":e},r.prototype.city=function(){return this.capitalize(this.word({syllables:3}))},r.prototype.coordinates=function(a){return this.latitude(a)+", "+this.longitude(a)},r.prototype.countries=function(){return this.get("countries")},r.prototype.country=function(a){a=o(a);var e=this.pick(this.countries());return a.full?e.name:e.abbreviation},r.prototype.depth=function(a){return a=o(a,{fixed:5,min:-10994,max:0}),this.floating({min:a.min,max:a.max,fixed:a.fixed})},r.prototype.geohash=function(a){return a=o(a,{length:7}),this.string({length:a.length,pool:"0123456789bcdefghjkmnpqrstuvwxyz"})},r.prototype.geojson=function(a){return this.latitude(a)+", "+this.longitude(a)+", "+this.altitude(a)},r.prototype.latitude=function(a){return a=o(a,{fixed:5,min:-90,max:90}),this.floating({min:a.min,max:a.max,fixed:a.fixed})},r.prototype.longitude=function(a){return a=o(a,{fixed:5,min:-180,max:180}),this.floating({min:a.min,max:a.max,fixed:a.fixed})},r.prototype.phone=function(a){var e,n=this,i=function(a){var e=[];return a.sections.forEach(function(a){e.push(n.string({pool:"0123456789",length:a}))}),a.area+e.join(" ")};a=o(a,{formatted:!0,country:"us",mobile:!1}),a.formatted||(a.parens=!1);var t;switch(a.country){case"fr":a.mobile?(e=this.pick(["06","07"])+n.string({pool:"0123456789",length:8}),t=a.formatted?e.match(/../g).join(" "):e):(e=this.pick(["01"+this.pick(["30","34","39","40","41","42","43","44","45","46","47","48","49","53","55","56","58","60","64","69","70","72","73","74","75","76","77","78","79","80","81","82","83"])+n.string({pool:"0123456789",length:6}),"02"+this.pick(["14","18","22","23","28","29","30","31","32","33","34","35","36","37","38","40","41","43","44","45","46","47","48","49","50","51","52","53","54","56","57","61","62","69","72","76","77","78","85","90","96","97","98","99"])+n.string({pool:"0123456789",length:6}),"03"+this.pick(["10","20","21","22","23","24","25","26","27","28","29","39","44","45","51","52","54","55","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","80","81","82","83","84","85","86","87","88","89","90"])+n.string({pool:"0123456789",length:6}),"04"+this.pick(["11","13","15","20","22","26","27","30","32","34","37","42","43","44","50","56","57","63","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","88","89","90","91","92","93","94","95","97","98"])+n.string({pool:"0123456789",length:6}),"05"+this.pick(["08","16","17","19","24","31","32","33","34","35","40","45","46","47","49","53","55","56","57","58","59","61","62","63","64","65","67","79","81","82","86","87","90","94"])+n.string({pool:"0123456789",length:6}),"09"+n.string({pool:"0123456789",length:8})]),t=a.formatted?e.match(/../g).join(" "):e);break;case"uk":a.mobile?(e=this.pick([{area:"07"+this.pick(["4","5","7","8","9"]),sections:[2,6]},{area:"07624 ",sections:[6]}]),t=a.formatted?i(e):i(e).replace(" ","")):(e=this.pick([{area:"01"+this.character({pool:"234569"})+"1 ",sections:[3,4]},{area:"020 "+this.character({pool:"378"}),sections:[3,4]},{area:"023 "+this.character({pool:"89"}),sections:[3,4]},{area:"024 7",sections:[3,4]},{area:"028 "+this.pick(["25","28","37","71","82","90","92","95"]),sections:[2,4]},{area:"012"+this.pick(["04","08","54","76","97","98"])+" ",sections:[5]},{area:"013"+this.pick(["63","64","84","86"])+" ",sections:[5]},{area:"014"+this.pick(["04","20","60","61","80","88"])+" ",sections:[5]},{area:"015"+this.pick(["24","27","62","66"])+" ",sections:[5]},{area:"016"+this.pick(["06","29","35","47","59","95"])+" ",sections:[5]},{area:"017"+this.pick(["26","44","50","68"])+" ",sections:[5]},{area:"018"+this.pick(["27","37","84","97"])+" ",sections:[5]},{area:"019"+this.pick(["00","05","35","46","49","63","95"])+" ",sections:[5]}]),t=a.formatted?i(e):i(e).replace(" ","","g"));break;case"us":var r=this.areacode(a).toString(),s=this.natural({min:2,max:9}).toString()+this.natural({min:0,max:9}).toString()+this.natural({min:0,max:9}).toString(),l=this.natural({min:1e3,max:9999}).toString();t=a.formatted?r+" "+s+"-"+l:r+s+l}return t},r.prototype.postal=function(){var a=this.character({pool:"XVTSRPNKLMHJGECBA"}),e=a+this.natural({max:9})+this.character({alpha:!0,casing:"upper"}),n=this.natural({max:9})+this.character({alpha:!0,casing:"upper"})+this.natural({max:9});return e+" "+n},r.prototype.provinces=function(a){return a=o(a,{country:"ca"}),this.get("provinces")[a.country.toLowerCase()]},r.prototype.province=function(a){return a&&a.full?this.pick(this.provinces(a)).name:this.pick(this.provinces(a)).abbreviation},r.prototype.state=function(a){return a&&a.full?this.pick(this.states(a)).name:this.pick(this.states(a)).abbreviation},r.prototype.states=function(a){a=o(a,{country:"us",us_states_and_dc:!0});var e;switch(a.country.toLowerCase()){case"us":var n=this.get("us_states_and_dc"),i=this.get("territories"),t=this.get("armed_forces");e=[],a.us_states_and_dc&&(e=e.concat(n)),a.territories&&(e=e.concat(i)),a.armed_forces&&(e=e.concat(t));break;case"it":e=this.get("country_regions")[a.country.toLowerCase()]}return e},r.prototype.street=function(a){a=o(a,{country:"us",syllables:2});var e;switch(a.country.toLowerCase()){case"us":e=this.word({syllables:a.syllables}),e=this.capitalize(e),e+=" ",e+=a.short_suffix?this.street_suffix(a).abbreviation:this.street_suffix(a).name;break;case"it":e=this.word({syllables:a.syllables}),e=this.capitalize(e),e=(a.short_suffix?this.street_suffix(a).abbreviation:this.street_suffix(a).name)+" "+e}return e},r.prototype.street_suffix=function(a){return a=o(a,{country:"us"}),this.pick(this.street_suffixes(a))},r.prototype.street_suffixes=function(a){return a=o(a,{country:"us"}),this.get("street_suffixes")[a.country.toLowerCase()]},r.prototype.zip=function(a){var e=this.n(this.natural,5,{max:9});return a&&a.plusfour===!0&&(e.push("-"),e=e.concat(this.n(this.natural,4,{max:9}))),e.join("")},r.prototype.ampm=function(){return this.bool()?"am":"pm"},r.prototype.date=function(a){var e,n;if(a&&(a.min||a.max)){a=o(a,{american:!0,string:!1});var i="undefined"!=typeof a.min?a.min.getTime():1,t="undefined"!=typeof a.max?a.max.getTime():864e13;n=new Date(this.natural({min:i,max:t}))}else{var r=this.month({raw:!0}),s=r.days;a&&a.month&&(s=this.get("months")[(a.month%12+12)%12].days),a=o(a,{year:parseInt(this.year(),10),month:r.numeric-1,day:this.natural({min:1,max:s}),hour:this.hour(),minute:this.minute(),second:this.second(),millisecond:this.millisecond(),american:!0,string:!1}),n=new Date(a.year,a.month,a.day,a.hour,a.minute,a.second,a.millisecond)}return e=a.american?n.getMonth()+1+"/"+n.getDate()+"/"+n.getFullYear():n.getDate()+"/"+(n.getMonth()+1)+"/"+n.getFullYear(),a.string?e:n},r.prototype.hammertime=function(a){return this.date(a).getTime()},r.prototype.hour=function(a){return a=o(a,{min:a&&a.twentyfour?0:1,max:a&&a.twentyfour?23:12}),s(a.min<0,"Chance: Min cannot be less than 0."),s(a.twentyfour&&a.max>23,"Chance: Max cannot be greater than 23 for twentyfour option."),s(!a.twentyfour&&a.max>12,"Chance: Max cannot be greater than 12."),s(a.min>a.max,"Chance: Min cannot be greater than Max."),this.natural({min:a.min,max:a.max})},r.prototype.millisecond=function(){return this.natural({max:999})},r.prototype.minute=r.prototype.second=function(a){return a=o(a,{min:0,max:59}),s(a.min<0,"Chance: Min cannot be less than 0."),s(a.max>59,"Chance: Max cannot be greater than 59."),s(a.min>a.max,"Chance: Min cannot be greater than Max."),this.natural({min:a.min,max:a.max})},r.prototype.month=function(a){a=o(a,{min:1,max:12}),s(a.min<1,"Chance: Min cannot be less than 1."),s(a.max>12,"Chance: Max cannot be greater than 12."),s(a.min>a.max,"Chance: Min cannot be greater than Max.");var e=this.pick(this.months().slice(a.min-1,a.max));return a.raw?e:e.name},r.prototype.months=function(){return this.get("months")},r.prototype.second=function(){return this.natural({max:59})},r.prototype.timestamp=function(){return this.natural({min:1,max:parseInt((new Date).getTime()/1e3,10)})},r.prototype.weekday=function(a){a=o(a,{weekday_only:!1});var e=["Monday","Tuesday","Wednesday","Thursday","Friday"];return a.weekday_only||(e.push("Saturday"),e.push("Sunday")),this.pickone(e)},r.prototype.year=function(a){return a=o(a,{min:(new Date).getFullYear()}),a.max="undefined"!=typeof a.max?a.max:a.min+100,this.natural(a).toString()},r.prototype.cc=function(a){a=o(a);var e,n,i;return e=a.type?this.cc_type({name:a.type,raw:!0}):this.cc_type({raw:!0}),n=e.prefix.split(""),i=e.length-e.prefix.length-1,n=n.concat(this.n(this.integer,i,{min:0,max:9})),n.push(this.luhn_calculate(n.join(""))),n.join("")},r.prototype.cc_types=function(){return this.get("cc_types")},r.prototype.cc_type=function(a){a=o(a);var e=this.cc_types(),n=null;if(a.name){for(var i=0;i<e.length;i++)if(e[i].name===a.name||e[i].short_name===a.name){n=e[i];break}if(null===n)throw new RangeError("Credit card type '"+a.name+"'' is not supported")}else n=this.pick(e);return a.raw?n:n.name},r.prototype.currency_types=function(){return this.get("currency_types")},r.prototype.currency=function(){return this.pick(this.currency_types())},r.prototype.currency_pair=function(a){var e=this.unique(this.currency,2,{comparator:function(a,e){return a.reduce(function(a,n){return a||n.code===e.code},!1)}});return a?e[0].code+"/"+e[1].code:e},r.prototype.dollar=function(a){a=o(a,{max:1e4,min:0});var e=this.floating({min:a.min,max:a.max,fixed:2}).toString(),n=e.split(".")[1];return void 0===n?e+=".00":n.length<2&&(e+="0"),e<0?"-$"+e.replace("-",""):"$"+e},r.prototype.euro=function(a){return Number(this.dollar(a).replace("$","")).toLocaleString()+"€"},r.prototype.exp=function(a){a=o(a);var e={};return e.year=this.exp_year(),e.year===(new Date).getFullYear().toString()?e.month=this.exp_month({future:!0}):e.month=this.exp_month(),a.raw?e:e.month+"/"+e.year},r.prototype.exp_month=function(a){a=o(a);var e,n,i=(new Date).getMonth()+1;if(a.future&&12!==i){do e=this.month({raw:!0}).numeric,n=parseInt(e,10);while(n<=i)}else e=this.month({raw:!0}).numeric;return e},r.prototype.exp_year=function(){var a=(new Date).getMonth()+1,e=(new Date).getFullYear();return this.year({min:12===a?e+1:e,max:e+10})},r.prototype.vat=function(a){switch(a=o(a,{country:"it"}),a.country.toLowerCase()){case"it":return this.it_vat()}},r.prototype.it_vat=function(){var a=this.natural({min:1,max:18e5});return a=this.pad(a,7)+this.pad(this.pick(this.provinces({country:"it"})).code,3),a+this.luhn_calculate(a)},r.prototype.cf=function(a){a=a||{};var e=a.gender?a.gender:this.gender(),n=a.first?a.first:this.first({gender:e,nationality:"it"}),i=a.last?a.last:this.last({nationality:"it"}),t=a.birthday?a.birthday:this.birthday(),r=a.city?a.city:this.pickone(["A","B","C","D","E","F","G","H","I","L","M","Z"])+this.pad(this.natural({max:999}),3),o=[],s=function(a,e){var n,i=[];return a.length<3?i=a.split("").concat("XXX".split("")).splice(0,3):(n=a.toUpperCase().split("").map(function(a){return"BCDFGHJKLMNPRSTVWZ".indexOf(a)!==-1?a:void 0}).join(""),n.length>3&&(n=e?n.substr(0,3):n[0]+n.substr(2,2)),n.length<3&&(i=n,n=a.toUpperCase().split("").map(function(a){return"AEIOU".indexOf(a)!==-1?a:void 0}).join("").substr(0,3-i.length)),i+=n),i},l=function(a,e,n){var i=["A","B","C","D","E","H","L","M","P","R","S","T"];return a.getFullYear().toString().substr(2)+i[a.getMonth()]+n.pad(a.getDate()+("female"===e.toLowerCase()?40:0),2)},m=function(a){for(var e="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",n="ABCDEFGHIJABCDEFGHIJKLMNOPQRSTUVWXYZ",i="ABCDEFGHIJKLMNOPQRSTUVWXYZ",t="BAKPLCQDREVOSFTGUHMINJWZYX",r=0,o=0;o<15;o++)r+=o%2!==0?i.indexOf(n[e.indexOf(a[o])]):t.indexOf(n[e.indexOf(a[o])]);return i[r%26]};return o=o.concat(s(i,!0),s(n),l(t,e,this),r.toUpperCase().split("")).join(""),o+=m(o.toUpperCase(),this),o.toUpperCase()},r.prototype.pl_pesel=function(){for(var a=this.natural({min:1,max:9999999999}),e=this.pad(a,10).split(""),n=0;n<e.length;n++)e[n]=parseInt(e[n]);var i=(1*e[0]+3*e[1]+7*e[2]+9*e[3]+1*e[4]+3*e[5]+7*e[6]+9*e[7]+1*e[8]+3*e[9])%10;return 0!==i&&(i=10-i),e.join("")+i},r.prototype.pl_nip=function(){for(var a=this.natural({min:1,max:999999999}),e=this.pad(a,9).split(""),n=0;n<e.length;n++)e[n]=parseInt(e[n]);
var i=(6*e[0]+5*e[1]+7*e[2]+2*e[3]+3*e[4]+4*e[5]+5*e[6]+6*e[7]+7*e[8])%11;return 10===i?this.pl_nip():e.join("")+i},r.prototype.pl_regon=function(){for(var a=this.natural({min:1,max:99999999}),e=this.pad(a,8).split(""),n=0;n<e.length;n++)e[n]=parseInt(e[n]);var i=(8*e[0]+9*e[1]+2*e[2]+3*e[3]+4*e[4]+5*e[5]+6*e[6]+7*e[7])%11;return 10===i&&(i=0),e.join("")+i},r.prototype.d4=l({min:1,max:4}),r.prototype.d6=l({min:1,max:6}),r.prototype.d8=l({min:1,max:8}),r.prototype.d10=l({min:1,max:10}),r.prototype.d12=l({min:1,max:12}),r.prototype.d20=l({min:1,max:20}),r.prototype.d30=l({min:1,max:30}),r.prototype.d100=l({min:1,max:100}),r.prototype.rpg=function(a,e){if(e=o(e),a){var n=a.toLowerCase().split("d"),i=[];if(2!==n.length||!parseInt(n[0],10)||!parseInt(n[1],10))throw new Error("Invalid format provided. Please provide #d# where the first # is the number of dice to roll, the second # is the max of each die");for(var t=n[0];t>0;t--)i[t-1]=this.natural({min:1,max:n[1]});return"undefined"!=typeof e.sum&&e.sum?i.reduce(function(a,e){return a+e}):i}throw new RangeError("A type of die roll must be included")},r.prototype.guid=function(a){a=o(a,{version:5});var e="abcdef1234567890",n="ab89",i=this.string({pool:e,length:8})+"-"+this.string({pool:e,length:4})+"-"+a.version+this.string({pool:e,length:3})+"-"+this.string({pool:n,length:1})+this.string({pool:e,length:3})+"-"+this.string({pool:e,length:12});return i},r.prototype.hash=function(a){a=o(a,{length:40,casing:"lower"});var e="upper"===a.casing?v.toUpperCase():v;return this.string({pool:e,length:a.length})},r.prototype.luhn_check=function(a){var e=a.toString(),n=+e.substring(e.length-1);return n===this.luhn_calculate(+e.substring(0,e.length-1))},r.prototype.luhn_calculate=function(a){for(var e,n=a.toString().split("").reverse(),i=0,t=0,r=n.length;r>t;++t)e=+n[t],t%2===0&&(e*=2,e>9&&(e-=9)),i+=e;return 9*i%10},r.prototype.md5=function(a){var e={str:"",key:null,raw:!1};if(a)if("string"==typeof a)e.str=a,a={};else{if("object"!=typeof a)return null;if("Array"===a.constructor)return null}else e.str=this.string(),a={};if(e=o(a,e),!e.str)throw new Error("A parameter is required to return an md5 hash.");return this.bimd5.md5(e.str,e.key,e.raw)},r.prototype.file=function(a){var e,n,i=a||{},t="fileExtension",r=Object.keys(this.get("fileExtension"));if(e=this.word({length:i.length}),i.extention)return n=i.extention,e+"."+n;if(i.extentions){if(Array.isArray(i.extentions))return n=this.pickone(i.extentions),e+"."+n;if(i.extentions.constructor===Object){var o=i.extentions,s=Object.keys(o);return n=this.pickone(o[this.pickone(s)]),e+"."+n}throw new Error("Expect collection of type Array or Object to be passed as an argument ")}if(i.fileType){var l=i.fileType;if(r.indexOf(l)!==-1)return n=this.pickone(this.get(t)[l]),e+"."+n;throw new Error("Expect file type value to be 'raster', 'vector', '3d' or 'document' ")}return n=this.pickone(this.get(t)[this.pickone(r)]),e+"."+n};var C={firstNames:{male:{en:["James","John","Robert","Michael","William","David","Richard","Joseph","Charles","Thomas","Christopher","Daniel","Matthew","George","Donald","Anthony","Paul","Mark","Edward","Steven","Kenneth","Andrew","Brian","Joshua","Kevin","Ronald","Timothy","Jason","Jeffrey","Frank","Gary","Ryan","Nicholas","Eric","Stephen","Jacob","Larry","Jonathan","Scott","Raymond","Justin","Brandon","Gregory","Samuel","Benjamin","Patrick","Jack","Henry","Walter","Dennis","Jerry","Alexander","Peter","Tyler","Douglas","Harold","Aaron","Jose","Adam","Arthur","Zachary","Carl","Nathan","Albert","Kyle","Lawrence","Joe","Willie","Gerald","Roger","Keith","Jeremy","Terry","Harry","Ralph","Sean","Jesse","Roy","Louis","Billy","Austin","Bruce","Eugene","Christian","Bryan","Wayne","Russell","Howard","Fred","Ethan","Jordan","Philip","Alan","Juan","Randy","Vincent","Bobby","Dylan","Johnny","Phillip","Victor","Clarence","Ernest","Martin","Craig","Stanley","Shawn","Travis","Bradley","Leonard","Earl","Gabriel","Jimmy","Francis","Todd","Noah","Danny","Dale","Cody","Carlos","Allen","Frederick","Logan","Curtis","Alex","Joel","Luis","Norman","Marvin","Glenn","Tony","Nathaniel","Rodney","Melvin","Alfred","Steve","Cameron","Chad","Edwin","Caleb","Evan","Antonio","Lee","Herbert","Jeffery","Isaac","Derek","Ricky","Marcus","Theodore","Elijah","Luke","Jesus","Eddie","Troy","Mike","Dustin","Ray","Adrian","Bernard","Leroy","Angel","Randall","Wesley","Ian","Jared","Mason","Hunter","Calvin","Oscar","Clifford","Jay","Shane","Ronnie","Barry","Lucas","Corey","Manuel","Leo","Tommy","Warren","Jackson","Isaiah","Connor","Don","Dean","Jon","Julian","Miguel","Bill","Lloyd","Charlie","Mitchell","Leon","Jerome","Darrell","Jeremiah","Alvin","Brett","Seth","Floyd","Jim","Blake","Micheal","Gordon","Trevor","Lewis","Erik","Edgar","Vernon","Devin","Gavin","Jayden","Chris","Clyde","Tom","Derrick","Mario","Brent","Marc","Herman","Chase","Dominic","Ricardo","Franklin","Maurice","Max","Aiden","Owen","Lester","Gilbert","Elmer","Gene","Francisco","Glen","Cory","Garrett","Clayton","Sam","Jorge","Chester","Alejandro","Jeff","Harvey","Milton","Cole","Ivan","Andre","Duane","Landon"],it:["Adolfo","Alberto","Aldo","Alessandro","Alessio","Alfredo","Alvaro","Andrea","Angelo","Angiolo","Antonino","Antonio","Attilio","Benito","Bernardo","Bruno","Carlo","Cesare","Christian","Claudio","Corrado","Cosimo","Cristian","Cristiano","Daniele","Dario","David","Davide","Diego","Dino","Domenico","Duccio","Edoardo","Elia","Elio","Emanuele","Emiliano","Emilio","Enrico","Enzo","Ettore","Fabio","Fabrizio","Federico","Ferdinando","Fernando","Filippo","Francesco","Franco","Gabriele","Giacomo","Giampaolo","Giampiero","Giancarlo","Gianfranco","Gianluca","Gianmarco","Gianni","Gino","Giorgio","Giovanni","Giuliano","Giulio","Giuseppe","Graziano","Gregorio","Guido","Iacopo","Jacopo","Lapo","Leonardo","Lorenzo","Luca","Luciano","Luigi","Manuel","Marcello","Marco","Marino","Mario","Massimiliano","Massimo","Matteo","Mattia","Maurizio","Mauro","Michele","Mirko","Mohamed","Nello","Neri","Niccolò","Nicola","Osvaldo","Otello","Paolo","Pier Luigi","Piero","Pietro","Raffaele","Remo","Renato","Renzo","Riccardo","Roberto","Rolando","Romano","Salvatore","Samuele","Sandro","Sergio","Silvano","Simone","Stefano","Thomas","Tommaso","Ubaldo","Ugo","Umberto","Valerio","Valter","Vasco","Vincenzo","Vittorio"]},female:{en:["Mary","Emma","Elizabeth","Minnie","Margaret","Ida","Alice","Bertha","Sarah","Annie","Clara","Ella","Florence","Cora","Martha","Laura","Nellie","Grace","Carrie","Maude","Mabel","Bessie","Jennie","Gertrude","Julia","Hattie","Edith","Mattie","Rose","Catherine","Lillian","Ada","Lillie","Helen","Jessie","Louise","Ethel","Lula","Myrtle","Eva","Frances","Lena","Lucy","Edna","Maggie","Pearl","Daisy","Fannie","Josephine","Dora","Rosa","Katherine","Agnes","Marie","Nora","May","Mamie","Blanche","Stella","Ellen","Nancy","Effie","Sallie","Nettie","Della","Lizzie","Flora","Susie","Maud","Mae","Etta","Harriet","Sadie","Caroline","Katie","Lydia","Elsie","Kate","Susan","Mollie","Alma","Addie","Georgia","Eliza","Lulu","Nannie","Lottie","Amanda","Belle","Charlotte","Rebecca","Ruth","Viola","Olive","Amelia","Hannah","Jane","Virginia","Emily","Matilda","Irene","Kathryn","Esther","Willie","Henrietta","Ollie","Amy","Rachel","Sara","Estella","Theresa","Augusta","Ora","Pauline","Josie","Lola","Sophia","Leona","Anne","Mildred","Ann","Beulah","Callie","Lou","Delia","Eleanor","Barbara","Iva","Louisa","Maria","Mayme","Evelyn","Estelle","Nina","Betty","Marion","Bettie","Dorothy","Luella","Inez","Lela","Rosie","Allie","Millie","Janie","Cornelia","Victoria","Ruby","Winifred","Alta","Celia","Christine","Beatrice","Birdie","Harriett","Mable","Myra","Sophie","Tillie","Isabel","Sylvia","Carolyn","Isabelle","Leila","Sally","Ina","Essie","Bertie","Nell","Alberta","Katharine","Lora","Rena","Mina","Rhoda","Mathilda","Abbie","Eula","Dollie","Hettie","Eunice","Fanny","Ola","Lenora","Adelaide","Christina","Lelia","Nelle","Sue","Johanna","Lilly","Lucinda","Minerva","Lettie","Roxie","Cynthia","Helena","Hilda","Hulda","Bernice","Genevieve","Jean","Cordelia","Marian","Francis","Jeanette","Adeline","Gussie","Leah","Lois","Lura","Mittie","Hallie","Isabella","Olga","Phoebe","Teresa","Hester","Lida","Lina","Winnie","Claudia","Marguerite","Vera","Cecelia","Bess","Emilie","John","Rosetta","Verna","Myrtie","Cecilia","Elva","Olivia","Ophelia","Georgie","Elnora","Violet","Adele","Lily","Linnie","Loretta","Madge","Polly","Virgie","Eugenia","Lucile","Lucille","Mabelle","Rosalie"],it:["Ada","Adriana","Alessandra","Alessia","Alice","Angela","Anna","Anna Maria","Annalisa","Annita","Annunziata","Antonella","Arianna","Asia","Assunta","Aurora","Barbara","Beatrice","Benedetta","Bianca","Bruna","Camilla","Carla","Carlotta","Carmela","Carolina","Caterina","Catia","Cecilia","Chiara","Cinzia","Clara","Claudia","Costanza","Cristina","Daniela","Debora","Diletta","Dina","Donatella","Elena","Eleonora","Elisa","Elisabetta","Emanuela","Emma","Eva","Federica","Fernanda","Fiorella","Fiorenza","Flora","Franca","Francesca","Gabriella","Gaia","Gemma","Giada","Gianna","Gina","Ginevra","Giorgia","Giovanna","Giulia","Giuliana","Giuseppa","Giuseppina","Grazia","Graziella","Greta","Ida","Ilaria","Ines","Iolanda","Irene","Irma","Isabella","Jessica","Laura","Leda","Letizia","Licia","Lidia","Liliana","Lina","Linda","Lisa","Livia","Loretta","Luana","Lucia","Luciana","Lucrezia","Luisa","Manuela","Mara","Marcella","Margherita","Maria","Maria Cristina","Maria Grazia","Maria Luisa","Maria Pia","Maria Teresa","Marina","Marisa","Marta","Martina","Marzia","Matilde","Melissa","Michela","Milena","Mirella","Monica","Natalina","Nella","Nicoletta","Noemi","Olga","Paola","Patrizia","Piera","Pierina","Raffaella","Rebecca","Renata","Rina","Rita","Roberta","Rosa","Rosanna","Rossana","Rossella","Sabrina","Sandra","Sara","Serena","Silvana","Silvia","Simona","Simonetta","Sofia","Sonia","Stefania","Susanna","Teresa","Tina","Tiziana","Tosca","Valentina","Valeria","Vanda","Vanessa","Vanna","Vera","Veronica","Vilma","Viola","Virginia","Vittoria"]}},lastNames:{en:["Smith","Johnson","Williams","Jones","Brown","Davis","Miller","Wilson","Moore","Taylor","Anderson","Thomas","Jackson","White","Harris","Martin","Thompson","Garcia","Martinez","Robinson","Clark","Rodriguez","Lewis","Lee","Walker","Hall","Allen","Young","Hernandez","King","Wright","Lopez","Hill","Scott","Green","Adams","Baker","Gonzalez","Nelson","Carter","Mitchell","Perez","Roberts","Turner","Phillips","Campbell","Parker","Evans","Edwards","Collins","Stewart","Sanchez","Morris","Rogers","Reed","Cook","Morgan","Bell","Murphy","Bailey","Rivera","Cooper","Richardson","Cox","Howard","Ward","Torres","Peterson","Gray","Ramirez","James","Watson","Brooks","Kelly","Sanders","Price","Bennett","Wood","Barnes","Ross","Henderson","Coleman","Jenkins","Perry","Powell","Long","Patterson","Hughes","Flores","Washington","Butler","Simmons","Foster","Gonzales","Bryant","Alexander","Russell","Griffin","Diaz","Hayes","Myers","Ford","Hamilton","Graham","Sullivan","Wallace","Woods","Cole","West","Jordan","Owens","Reynolds","Fisher","Ellis","Harrison","Gibson","McDonald","Cruz","Marshall","Ortiz","Gomez","Murray","Freeman","Wells","Webb","Simpson","Stevens","Tucker","Porter","Hunter","Hicks","Crawford","Henry","Boyd","Mason","Morales","Kennedy","Warren","Dixon","Ramos","Reyes","Burns","Gordon","Shaw","Holmes","Rice","Robertson","Hunt","Black","Daniels","Palmer","Mills","Nichols","Grant","Knight","Ferguson","Rose","Stone","Hawkins","Dunn","Perkins","Hudson","Spencer","Gardner","Stephens","Payne","Pierce","Berry","Matthews","Arnold","Wagner","Willis","Ray","Watkins","Olson","Carroll","Duncan","Snyder","Hart","Cunningham","Bradley","Lane","Andrews","Ruiz","Harper","Fox","Riley","Armstrong","Carpenter","Weaver","Greene","Lawrence","Elliott","Chavez","Sims","Austin","Peters","Kelley","Franklin","Lawson","Fields","Gutierrez","Ryan","Schmidt","Carr","Vasquez","Castillo","Wheeler","Chapman","Oliver","Montgomery","Richards","Williamson","Johnston","Banks","Meyer","Bishop","McCoy","Howell","Alvarez","Morrison","Hansen","Fernandez","Garza","Harvey","Little","Burton","Stanley","Nguyen","George","Jacobs","Reid","Kim","Fuller","Lynch","Dean","Gilbert","Garrett","Romero","Welch","Larson","Frazier","Burke","Hanson","Day","Mendoza","Moreno","Bowman","Medina","Fowler","Brewer","Hoffman","Carlson","Silva","Pearson","Holland","Douglas","Fleming","Jensen","Vargas","Byrd","Davidson","Hopkins","May","Terry","Herrera","Wade","Soto","Walters","Curtis","Neal","Caldwell","Lowe","Jennings","Barnett","Graves","Jimenez","Horton","Shelton","Barrett","Obrien","Castro","Sutton","Gregory","McKinney","Lucas","Miles","Craig","Rodriquez","Chambers","Holt","Lambert","Fletcher","Watts","Bates","Hale","Rhodes","Pena","Beck","Newman","Haynes","McDaniel","Mendez","Bush","Vaughn","Parks","Dawson","Santiago","Norris","Hardy","Love","Steele","Curry","Powers","Schultz","Barker","Guzman","Page","Munoz","Ball","Keller","Chandler","Weber","Leonard","Walsh","Lyons","Ramsey","Wolfe","Schneider","Mullins","Benson","Sharp","Bowen","Daniel","Barber","Cummings","Hines","Baldwin","Griffith","Valdez","Hubbard","Salazar","Reeves","Warner","Stevenson","Burgess","Santos","Tate","Cross","Garner","Mann","Mack","Moss","Thornton","Dennis","McGee","Farmer","Delgado","Aguilar","Vega","Glover","Manning","Cohen","Harmon","Rodgers","Robbins","Newton","Todd","Blair","Higgins","Ingram","Reese","Cannon","Strickland","Townsend","Potter","Goodwin","Walton","Rowe","Hampton","Ortega","Patton","Swanson","Joseph","Francis","Goodman","Maldonado","Yates","Becker","Erickson","Hodges","Rios","Conner","Adkins","Webster","Norman","Malone","Hammond","Flowers","Cobb","Moody","Quinn","Blake","Maxwell","Pope","Floyd","Osborne","Paul","McCarthy","Guerrero","Lindsey","Estrada","Sandoval","Gibbs","Tyler","Gross","Fitzgerald","Stokes","Doyle","Sherman","Saunders","Wise","Colon","Gill","Alvarado","Greer","Padilla","Simon","Waters","Nunez","Ballard","Schwartz","McBride","Houston","Christensen","Klein","Pratt","Briggs","Parsons","McLaughlin","Zimmerman","French","Buchanan","Moran","Copeland","Roy","Pittman","Brady","McCormick","Holloway","Brock","Poole","Frank","Logan","Owen","Bass","Marsh","Drake","Wong","Jefferson","Park","Morton","Abbott","Sparks","Patrick","Norton","Huff","Clayton","Massey","Lloyd","Figueroa","Carson","Bowers","Roberson","Barton","Tran","Lamb","Harrington","Casey","Boone","Cortez","Clarke","Mathis","Singleton","Wilkins","Cain","Bryan","Underwood","Hogan","McKenzie","Collier","Luna","Phelps","McGuire","Allison","Bridges","Wilkerson","Nash","Summers","Atkins"],it:["Acciai","Aglietti","Agostini","Agresti","Ahmed","Aiazzi","Albanese","Alberti","Alessi","Alfani","Alinari","Alterini","Amato","Ammannati","Ancillotti","Andrei","Andreini","Andreoni","Angeli","Anichini","Antonelli","Antonini","Arena","Ariani","Arnetoli","Arrighi","Baccani","Baccetti","Bacci","Bacherini","Badii","Baggiani","Baglioni","Bagni","Bagnoli","Baldassini","Baldi","Baldini","Ballerini","Balli","Ballini","Balloni","Bambi","Banchi","Bandinelli","Bandini","Bani","Barbetti","Barbieri","Barchielli","Bardazzi","Bardelli","Bardi","Barducci","Bargellini","Bargiacchi","Barni","Baroncelli","Baroncini","Barone","Baroni","Baronti","Bartalesi","Bartoletti","Bartoli","Bartolini","Bartoloni","Bartolozzi","Basagni","Basile","Bassi","Batacchi","Battaglia","Battaglini","Bausi","Becagli","Becattini","Becchi","Becucci","Bellandi","Bellesi","Belli","Bellini","Bellucci","Bencini","Benedetti","Benelli","Beni","Benini","Bensi","Benucci","Benvenuti","Berlincioni","Bernacchioni","Bernardi","Bernardini","Berni","Bernini","Bertelli","Berti","Bertini","Bessi","Betti","Bettini","Biagi","Biagini","Biagioni","Biagiotti","Biancalani","Bianchi","Bianchini","Bianco","Biffoli","Bigazzi","Bigi","Biliotti","Billi","Binazzi","Bindi","Bini","Biondi","Bizzarri","Bocci","Bogani","Bolognesi","Bonaiuti","Bonanni","Bonciani","Boncinelli","Bondi","Bonechi","Bongini","Boni","Bonini","Borchi","Boretti","Borghi","Borghini","Borgioli","Borri","Borselli","Boschi","Bottai","Bracci","Braccini","Brandi","Braschi","Bravi","Brazzini","Breschi","Brilli","Brizzi","Brogelli","Brogi","Brogioni","Brunelli","Brunetti","Bruni","Bruno","Brunori","Bruschi","Bucci","Bucciarelli","Buccioni","Bucelli","Bulli","Burberi","Burchi","Burgassi","Burroni","Bussotti","Buti","Caciolli","Caiani","Calabrese","Calamai","Calamandrei","Caldini","Calo'","Calonaci","Calosi","Calvelli","Cambi","Camiciottoli","Cammelli","Cammilli","Campolmi","Cantini","Capanni","Capecchi","Caponi","Cappelletti","Cappelli","Cappellini","Cappugi","Capretti","Caputo","Carbone","Carboni","Cardini","Carlesi","Carletti","Carli","Caroti","Carotti","Carrai","Carraresi","Carta","Caruso","Casalini","Casati","Caselli","Casini","Castagnoli","Castellani","Castelli","Castellucci","Catalano","Catarzi","Catelani","Cavaciocchi","Cavallaro","Cavallini","Cavicchi","Cavini","Ceccarelli","Ceccatelli","Ceccherelli","Ceccherini","Cecchi","Cecchini","Cecconi","Cei","Cellai","Celli","Cellini","Cencetti","Ceni","Cenni","Cerbai","Cesari","Ceseri","Checcacci","Checchi","Checcucci","Cheli","Chellini","Chen","Cheng","Cherici","Cherubini","Chiaramonti","Chiarantini","Chiarelli","Chiari","Chiarini","Chiarugi","Chiavacci","Chiesi","Chimenti","Chini","Chirici","Chiti","Ciabatti","Ciampi","Cianchi","Cianfanelli","Cianferoni","Ciani","Ciapetti","Ciappi","Ciardi","Ciatti","Cicali","Ciccone","Cinelli","Cini","Ciobanu","Ciolli","Cioni","Cipriani","Cirillo","Cirri","Ciucchi","Ciuffi","Ciulli","Ciullini","Clemente","Cocchi","Cognome","Coli","Collini","Colombo","Colzi","Comparini","Conforti","Consigli","Conte","Conti","Contini","Coppini","Coppola","Corsi","Corsini","Corti","Cortini","Cosi","Costa","Costantini","Costantino","Cozzi","Cresci","Crescioli","Cresti","Crini","Curradi","D'Agostino","D'Alessandro","D'Amico","D'Angelo","Daddi","Dainelli","Dallai","Danti","Davitti","De Angelis","De Luca","De Marco","De Rosa","De Santis","De Simone","De Vita","Degl'Innocenti","Degli Innocenti","Dei","Del Lungo","Del Re","Di Marco","Di Stefano","Dini","Diop","Dobre","Dolfi","Donati","Dondoli","Dong","Donnini","Ducci","Dumitru","Ermini","Esposito","Evangelisti","Fabbri","Fabbrini","Fabbrizzi","Fabbroni","Fabbrucci","Fabiani","Facchini","Faggi","Fagioli","Failli","Faini","Falciani","Falcini","Falcone","Fallani","Falorni","Falsini","Falugiani","Fancelli","Fanelli","Fanetti","Fanfani","Fani","Fantappie'","Fantechi","Fanti","Fantini","Fantoni","Farina","Fattori","Favilli","Fedi","Fei","Ferrante","Ferrara","Ferrari","Ferraro","Ferretti","Ferri","Ferrini","Ferroni","Fiaschi","Fibbi","Fiesoli","Filippi","Filippini","Fini","Fioravanti","Fiore","Fiorentini","Fiorini","Fissi","Focardi","Foggi","Fontana","Fontanelli","Fontani","Forconi","Formigli","Forte","Forti","Fortini","Fossati","Fossi","Francalanci","Franceschi","Franceschini","Franchi","Franchini","Franci","Francini","Francioni","Franco","Frassineti","Frati","Fratini","Frilli","Frizzi","Frosali","Frosini","Frullini","Fusco","Fusi","Gabbrielli","Gabellini","Gagliardi","Galanti","Galardi","Galeotti","Galletti","Galli","Gallo","Gallori","Gambacciani","Gargani","Garofalo","Garuglieri","Gashi","Gasperini","Gatti","Gelli","Gensini","Gentile","Gentili","Geri","Gerini","Gheri","Ghini","Giachetti","Giachi","Giacomelli","Gianassi","Giani","Giannelli","Giannetti","Gianni","Giannini","Giannoni","Giannotti","Giannozzi","Gigli","Giordano","Giorgetti","Giorgi","Giovacchini","Giovannelli","Giovannetti","Giovannini","Giovannoni","Giuliani","Giunti","Giuntini","Giusti","Gonnelli","Goretti","Gori","Gradi","Gramigni","Grassi","Grasso","Graziani","Grazzini","Greco","Grifoni","Grillo","Grimaldi","Grossi","Gualtieri","Guarducci","Guarino","Guarnieri","Guasti","Guerra","Guerri","Guerrini","Guidi","Guidotti","He","Hoxha","Hu","Huang","Iandelli","Ignesti","Innocenti","Jin","La Rosa","Lai","Landi","Landini","Lanini","Lapi","Lapini","Lari","Lascialfari","Lastrucci","Latini","Lazzeri","Lazzerini","Lelli","Lenzi","Leonardi","Leoncini","Leone","Leoni","Lepri","Li","Liao","Lin","Linari","Lippi","Lisi","Livi","Lombardi","Lombardini","Lombardo","Longo","Lopez","Lorenzi","Lorenzini","Lorini","Lotti","Lu","Lucchesi","Lucherini","Lunghi","Lupi","Madiai","Maestrini","Maffei","Maggi","Maggini","Magherini","Magini","Magnani","Magnelli","Magni","Magnolfi","Magrini","Malavolti","Malevolti","Manca","Mancini","Manetti","Manfredi","Mangani","Mannelli","Manni","Mannini","Mannucci","Manuelli","Manzini","Marcelli","Marchese","Marchetti","Marchi","Marchiani","Marchionni","Marconi","Marcucci","Margheri","Mari","Mariani","Marilli","Marinai","Marinari","Marinelli","Marini","Marino","Mariotti","Marsili","Martelli","Martinelli","Martini","Martino","Marzi","Masi","Masini","Masoni","Massai","Materassi","Mattei","Matteini","Matteucci","Matteuzzi","Mattioli","Mattolini","Matucci","Mauro","Mazzanti","Mazzei","Mazzetti","Mazzi","Mazzini","Mazzocchi","Mazzoli","Mazzoni","Mazzuoli","Meacci","Mecocci","Meini","Melani","Mele","Meli","Mengoni","Menichetti","Meoni","Merlini","Messeri","Messina","Meucci","Miccinesi","Miceli","Micheli","Michelini","Michelozzi","Migliori","Migliorini","Milani","Miniati","Misuri","Monaco","Montagnani","Montagni","Montanari","Montelatici","Monti","Montigiani","Montini","Morandi","Morandini","Morelli","Moretti","Morganti","Mori","Morini","Moroni","Morozzi","Mugnai","Mugnaini","Mustafa","Naldi","Naldini","Nannelli","Nanni","Nannini","Nannucci","Nardi","Nardini","Nardoni","Natali","Ndiaye","Nencetti","Nencini","Nencioni","Neri","Nesi","Nesti","Niccolai","Niccoli","Niccolini","Nigi","Nistri","Nocentini","Noferini","Novelli","Nucci","Nuti","Nutini","Oliva","Olivieri","Olmi","Orlandi","Orlandini","Orlando","Orsini","Ortolani","Ottanelli","Pacciani","Pace","Paci","Pacini","Pagani","Pagano","Paggetti","Pagliai","Pagni","Pagnini","Paladini","Palagi","Palchetti","Palloni","Palmieri","Palumbo","Pampaloni","Pancani","Pandolfi","Pandolfini","Panerai","Panichi","Paoletti","Paoli","Paolini","Papi","Papini","Papucci","Parenti","Parigi","Parisi","Parri","Parrini","Pasquini","Passeri","Pecchioli","Pecorini","Pellegrini","Pepi","Perini","Perrone","Peruzzi","Pesci","Pestelli","Petri","Petrini","Petrucci","Pettini","Pezzati","Pezzatini","Piani","Piazza","Piazzesi","Piazzini","Piccardi","Picchi","Piccini","Piccioli","Pieraccini","Pieraccioni","Pieralli","Pierattini","Pieri","Pierini","Pieroni","Pietrini","Pini","Pinna","Pinto","Pinzani","Pinzauti","Piras","Pisani","Pistolesi","Poggesi","Poggi","Poggiali","Poggiolini","Poli","Pollastri","Porciani","Pozzi","Pratellesi","Pratesi","Prosperi","Pruneti","Pucci","Puccini","Puccioni","Pugi","Pugliese","Puliti","Querci","Quercioli","Raddi","Radu","Raffaelli","Ragazzini","Ranfagni","Ranieri","Rastrelli","Raugei","Raveggi","Renai","Renzi","Rettori","Ricci","Ricciardi","Ridi","Ridolfi","Rigacci","Righi","Righini","Rinaldi","Risaliti","Ristori","Rizzo","Rocchi","Rocchini","Rogai","Romagnoli","Romanelli","Romani","Romano","Romei","Romeo","Romiti","Romoli","Romolini","Rontini","Rosati","Roselli","Rosi","Rossetti","Rossi","Rossini","Rovai","Ruggeri","Ruggiero","Russo","Sabatini","Saccardi","Sacchetti","Sacchi","Sacco","Salerno","Salimbeni","Salucci","Salvadori","Salvestrini","Salvi","Salvini","Sanesi","Sani","Sanna","Santi","Santini","Santoni","Santoro","Santucci","Sardi","Sarri","Sarti","Sassi","Sbolci","Scali","Scarpelli","Scarselli","Scopetani","Secci","Selvi","Senatori","Senesi","Serafini","Sereni","Serra","Sestini","Sguanci","Sieni","Signorini","Silvestri","Simoncini","Simonetti","Simoni","Singh","Sodi","Soldi","Somigli","Sorbi","Sorelli","Sorrentino","Sottili","Spina","Spinelli","Staccioli","Staderini","Stefanelli","Stefani","Stefanini","Stella","Susini","Tacchi","Tacconi","Taddei","Tagliaferri","Tamburini","Tanganelli","Tani","Tanini","Tapinassi","Tarchi","Tarchiani","Targioni","Tassi","Tassini","Tempesti","Terzani","Tesi","Testa","Testi","Tilli","Tinti","Tirinnanzi","Toccafondi","Tofanari","Tofani","Tognaccini","Tonelli","Tonini","Torelli","Torrini","Tosi","Toti","Tozzi","Trambusti","Trapani","Tucci","Turchi","Ugolini","Ulivi","Valente","Valenti","Valentini","Vangelisti","Vanni","Vannini","Vannoni","Vannozzi","Vannucchi","Vannucci","Ventura","Venturi","Venturini","Vestri","Vettori","Vichi","Viciani","Vieri","Vigiani","Vignoli","Vignolini","Vignozzi","Villani","Vinci","Visani","Vitale","Vitali","Viti","Viviani","Vivoli","Volpe","Volpi","Wang","Wu","Xu","Yang","Ye","Zagli","Zani","Zanieri","Zanobini","Zecchi","Zetti","Zhang","Zheng","Zhou","Zhu","Zingoni","Zini","Zoppi"]},countries:[{name:"Afghanistan",abbreviation:"AF"},{name:"Albania",abbreviation:"AL"},{name:"Algeria",abbreviation:"DZ"},{name:"American Samoa",abbreviation:"AS"},{name:"Andorra",abbreviation:"AD"},{name:"Angola",abbreviation:"AO"},{name:"Anguilla",abbreviation:"AI"},{name:"Antarctica",abbreviation:"AQ"},{name:"Antigua and Barbuda",abbreviation:"AG"},{name:"Argentina",abbreviation:"AR"},{name:"Armenia",abbreviation:"AM"},{name:"Aruba",abbreviation:"AW"},{name:"Australia",abbreviation:"AU"},{name:"Austria",abbreviation:"AT"},{name:"Azerbaijan",abbreviation:"AZ"},{name:"Bahamas",abbreviation:"BS"},{name:"Bahrain",abbreviation:"BH"},{name:"Bangladesh",abbreviation:"BD"},{name:"Barbados",abbreviation:"BB"},{name:"Belarus",abbreviation:"BY"},{name:"Belgium",abbreviation:"BE"},{name:"Belize",abbreviation:"BZ"},{name:"Benin",abbreviation:"BJ"},{name:"Bermuda",abbreviation:"BM"},{name:"Bhutan",abbreviation:"BT"},{name:"Bolivia",abbreviation:"BO"},{name:"Bosnia and Herzegovina",abbreviation:"BA"},{name:"Botswana",abbreviation:"BW"},{name:"Bouvet Island",abbreviation:"BV"},{name:"Brazil",abbreviation:"BR"},{name:"British Antarctic Territory",abbreviation:"BQ"},{name:"British Indian Ocean Territory",abbreviation:"IO"},{name:"British Virgin Islands",abbreviation:"VG"},{name:"Brunei",abbreviation:"BN"},{name:"Bulgaria",abbreviation:"BG"},{name:"Burkina Faso",abbreviation:"BF"},{name:"Burundi",abbreviation:"BI"},{name:"Cambodia",abbreviation:"KH"},{name:"Cameroon",abbreviation:"CM"},{name:"Canada",abbreviation:"CA"},{name:"Canton and Enderbury Islands",abbreviation:"CT"},{name:"Cape Verde",abbreviation:"CV"},{name:"Cayman Islands",abbreviation:"KY"},{name:"Central African Republic",abbreviation:"CF"},{name:"Chad",abbreviation:"TD"},{name:"Chile",abbreviation:"CL"},{name:"China",abbreviation:"CN"},{name:"Christmas Island",abbreviation:"CX"},{name:"Cocos [Keeling] Islands",abbreviation:"CC"},{name:"Colombia",abbreviation:"CO"},{name:"Comoros",abbreviation:"KM"},{name:"Congo - Brazzaville",abbreviation:"CG"},{name:"Congo - Kinshasa",abbreviation:"CD"},{name:"Cook Islands",abbreviation:"CK"},{name:"Costa Rica",abbreviation:"CR"},{name:"Croatia",abbreviation:"HR"},{name:"Cuba",abbreviation:"CU"},{name:"Cyprus",abbreviation:"CY"},{name:"Czech Republic",abbreviation:"CZ"},{name:"Côte d’Ivoire",abbreviation:"CI"},{name:"Denmark",abbreviation:"DK"},{name:"Djibouti",abbreviation:"DJ"},{name:"Dominica",abbreviation:"DM"},{name:"Dominican Republic",abbreviation:"DO"},{name:"Dronning Maud Land",abbreviation:"NQ"},{name:"East Germany",abbreviation:"DD"},{name:"Ecuador",abbreviation:"EC"},{name:"Egypt",abbreviation:"EG"},{name:"El Salvador",abbreviation:"SV"},{name:"Equatorial Guinea",abbreviation:"GQ"},{name:"Eritrea",abbreviation:"ER"},{name:"Estonia",abbreviation:"EE"},{name:"Ethiopia",abbreviation:"ET"},{name:"Falkland Islands",abbreviation:"FK"},{name:"Faroe Islands",abbreviation:"FO"},{name:"Fiji",abbreviation:"FJ"},{name:"Finland",abbreviation:"FI"},{name:"France",abbreviation:"FR"},{name:"French Guiana",abbreviation:"GF"},{name:"French Polynesia",abbreviation:"PF"},{name:"French Southern Territories",abbreviation:"TF"},{name:"French Southern and Antarctic Territories",abbreviation:"FQ"},{name:"Gabon",abbreviation:"GA"},{name:"Gambia",abbreviation:"GM"},{name:"Georgia",abbreviation:"GE"},{name:"Germany",abbreviation:"DE"},{name:"Ghana",abbreviation:"GH"},{name:"Gibraltar",abbreviation:"GI"},{name:"Greece",abbreviation:"GR"},{name:"Greenland",abbreviation:"GL"},{name:"Grenada",abbreviation:"GD"},{name:"Guadeloupe",abbreviation:"GP"},{name:"Guam",abbreviation:"GU"},{name:"Guatemala",abbreviation:"GT"},{name:"Guernsey",abbreviation:"GG"},{name:"Guinea",abbreviation:"GN"},{name:"Guinea-Bissau",abbreviation:"GW"},{name:"Guyana",abbreviation:"GY"},{name:"Haiti",abbreviation:"HT"},{name:"Heard Island and McDonald Islands",abbreviation:"HM"},{name:"Honduras",abbreviation:"HN"},{name:"Hong Kong SAR China",abbreviation:"HK"},{name:"Hungary",abbreviation:"HU"},{name:"Iceland",abbreviation:"IS"},{name:"India",abbreviation:"IN"},{name:"Indonesia",abbreviation:"ID"},{name:"Iran",abbreviation:"IR"},{name:"Iraq",abbreviation:"IQ"},{name:"Ireland",abbreviation:"IE"},{name:"Isle of Man",abbreviation:"IM"},{name:"Israel",abbreviation:"IL"},{name:"Italy",abbreviation:"IT"},{name:"Jamaica",abbreviation:"JM"},{name:"Japan",abbreviation:"JP"},{name:"Jersey",abbreviation:"JE"},{name:"Johnston Island",abbreviation:"JT"},{name:"Jordan",abbreviation:"JO"},{name:"Kazakhstan",abbreviation:"KZ"},{name:"Kenya",abbreviation:"KE"},{name:"Kiribati",abbreviation:"KI"},{name:"Kuwait",abbreviation:"KW"},{name:"Kyrgyzstan",abbreviation:"KG"},{name:"Laos",abbreviation:"LA"},{name:"Latvia",abbreviation:"LV"},{name:"Lebanon",abbreviation:"LB"},{name:"Lesotho",abbreviation:"LS"},{name:"Liberia",abbreviation:"LR"},{name:"Libya",abbreviation:"LY"},{name:"Liechtenstein",abbreviation:"LI"},{name:"Lithuania",abbreviation:"LT"},{name:"Luxembourg",abbreviation:"LU"},{name:"Macau SAR China",abbreviation:"MO"},{name:"Macedonia",abbreviation:"MK"},{name:"Madagascar",abbreviation:"MG"},{name:"Malawi",abbreviation:"MW"},{name:"Malaysia",abbreviation:"MY"},{name:"Maldives",abbreviation:"MV"},{name:"Mali",abbreviation:"ML"},{name:"Malta",abbreviation:"MT"},{name:"Marshall Islands",abbreviation:"MH"},{name:"Martinique",abbreviation:"MQ"},{name:"Mauritania",abbreviation:"MR"},{name:"Mauritius",abbreviation:"MU"},{name:"Mayotte",abbreviation:"YT"},{name:"Metropolitan France",abbreviation:"FX"},{name:"Mexico",abbreviation:"MX"},{name:"Micronesia",abbreviation:"FM"},{name:"Midway Islands",abbreviation:"MI"},{name:"Moldova",abbreviation:"MD"},{name:"Monaco",abbreviation:"MC"},{name:"Mongolia",abbreviation:"MN"},{name:"Montenegro",abbreviation:"ME"},{name:"Montserrat",abbreviation:"MS"},{name:"Morocco",abbreviation:"MA"},{name:"Mozambique",abbreviation:"MZ"},{name:"Myanmar [Burma]",abbreviation:"MM"},{name:"Namibia",abbreviation:"NA"},{name:"Nauru",abbreviation:"NR"},{name:"Nepal",abbreviation:"NP"},{name:"Netherlands",abbreviation:"NL"},{name:"Netherlands Antilles",abbreviation:"AN"},{name:"Neutral Zone",abbreviation:"NT"},{name:"New Caledonia",abbreviation:"NC"},{name:"New Zealand",abbreviation:"NZ"},{name:"Nicaragua",abbreviation:"NI"},{name:"Niger",abbreviation:"NE"},{name:"Nigeria",abbreviation:"NG"},{name:"Niue",abbreviation:"NU"},{name:"Norfolk Island",abbreviation:"NF"},{name:"North Korea",abbreviation:"KP"},{name:"North Vietnam",abbreviation:"VD"},{name:"Northern Mariana Islands",abbreviation:"MP"},{name:"Norway",abbreviation:"NO"},{name:"Oman",abbreviation:"OM"},{name:"Pacific Islands Trust Territory",abbreviation:"PC"},{name:"Pakistan",abbreviation:"PK"},{name:"Palau",abbreviation:"PW"},{name:"Palestinian Territories",abbreviation:"PS"},{name:"Panama",abbreviation:"PA"},{name:"Panama Canal Zone",abbreviation:"PZ"},{name:"Papua New Guinea",abbreviation:"PG"},{name:"Paraguay",abbreviation:"PY"},{name:"People's Democratic Republic of Yemen",abbreviation:"YD"},{name:"Peru",abbreviation:"PE"},{name:"Philippines",abbreviation:"PH"},{name:"Pitcairn Islands",abbreviation:"PN"},{name:"Poland",abbreviation:"PL"},{name:"Portugal",abbreviation:"PT"},{name:"Puerto Rico",abbreviation:"PR"},{name:"Qatar",abbreviation:"QA"},{name:"Romania",abbreviation:"RO"},{name:"Russia",abbreviation:"RU"},{name:"Rwanda",abbreviation:"RW"},{name:"Réunion",abbreviation:"RE"},{name:"Saint Barthélemy",abbreviation:"BL"},{name:"Saint Helena",
abbreviation:"SH"},{name:"Saint Kitts and Nevis",abbreviation:"KN"},{name:"Saint Lucia",abbreviation:"LC"},{name:"Saint Martin",abbreviation:"MF"},{name:"Saint Pierre and Miquelon",abbreviation:"PM"},{name:"Saint Vincent and the Grenadines",abbreviation:"VC"},{name:"Samoa",abbreviation:"WS"},{name:"San Marino",abbreviation:"SM"},{name:"Saudi Arabia",abbreviation:"SA"},{name:"Senegal",abbreviation:"SN"},{name:"Serbia",abbreviation:"RS"},{name:"Serbia and Montenegro",abbreviation:"CS"},{name:"Seychelles",abbreviation:"SC"},{name:"Sierra Leone",abbreviation:"SL"},{name:"Singapore",abbreviation:"SG"},{name:"Slovakia",abbreviation:"SK"},{name:"Slovenia",abbreviation:"SI"},{name:"Solomon Islands",abbreviation:"SB"},{name:"Somalia",abbreviation:"SO"},{name:"South Africa",abbreviation:"ZA"},{name:"South Georgia and the South Sandwich Islands",abbreviation:"GS"},{name:"South Korea",abbreviation:"KR"},{name:"Spain",abbreviation:"ES"},{name:"Sri Lanka",abbreviation:"LK"},{name:"Sudan",abbreviation:"SD"},{name:"Suriname",abbreviation:"SR"},{name:"Svalbard and Jan Mayen",abbreviation:"SJ"},{name:"Swaziland",abbreviation:"SZ"},{name:"Sweden",abbreviation:"SE"},{name:"Switzerland",abbreviation:"CH"},{name:"Syria",abbreviation:"SY"},{name:"São Tomé and Príncipe",abbreviation:"ST"},{name:"Taiwan",abbreviation:"TW"},{name:"Tajikistan",abbreviation:"TJ"},{name:"Tanzania",abbreviation:"TZ"},{name:"Thailand",abbreviation:"TH"},{name:"Timor-Leste",abbreviation:"TL"},{name:"Togo",abbreviation:"TG"},{name:"Tokelau",abbreviation:"TK"},{name:"Tonga",abbreviation:"TO"},{name:"Trinidad and Tobago",abbreviation:"TT"},{name:"Tunisia",abbreviation:"TN"},{name:"Turkey",abbreviation:"TR"},{name:"Turkmenistan",abbreviation:"TM"},{name:"Turks and Caicos Islands",abbreviation:"TC"},{name:"Tuvalu",abbreviation:"TV"},{name:"U.S. Minor Outlying Islands",abbreviation:"UM"},{name:"U.S. Miscellaneous Pacific Islands",abbreviation:"PU"},{name:"U.S. Virgin Islands",abbreviation:"VI"},{name:"Uganda",abbreviation:"UG"},{name:"Ukraine",abbreviation:"UA"},{name:"Union of Soviet Socialist Republics",abbreviation:"SU"},{name:"United Arab Emirates",abbreviation:"AE"},{name:"United Kingdom",abbreviation:"GB"},{name:"United States",abbreviation:"US"},{name:"Unknown or Invalid Region",abbreviation:"ZZ"},{name:"Uruguay",abbreviation:"UY"},{name:"Uzbekistan",abbreviation:"UZ"},{name:"Vanuatu",abbreviation:"VU"},{name:"Vatican City",abbreviation:"VA"},{name:"Venezuela",abbreviation:"VE"},{name:"Vietnam",abbreviation:"VN"},{name:"Wake Island",abbreviation:"WK"},{name:"Wallis and Futuna",abbreviation:"WF"},{name:"Western Sahara",abbreviation:"EH"},{name:"Yemen",abbreviation:"YE"},{name:"Zambia",abbreviation:"ZM"},{name:"Zimbabwe",abbreviation:"ZW"},{name:"Åland Islands",abbreviation:"AX"}],provinces:{ca:[{name:"Alberta",abbreviation:"AB"},{name:"British Columbia",abbreviation:"BC"},{name:"Manitoba",abbreviation:"MB"},{name:"New Brunswick",abbreviation:"NB"},{name:"Newfoundland and Labrador",abbreviation:"NL"},{name:"Nova Scotia",abbreviation:"NS"},{name:"Ontario",abbreviation:"ON"},{name:"Prince Edward Island",abbreviation:"PE"},{name:"Quebec",abbreviation:"QC"},{name:"Saskatchewan",abbreviation:"SK"},{name:"Northwest Territories",abbreviation:"NT"},{name:"Nunavut",abbreviation:"NU"},{name:"Yukon",abbreviation:"YT"}],it:[{name:"Agrigento",abbreviation:"AG",code:84},{name:"Alessandria",abbreviation:"AL",code:6},{name:"Ancona",abbreviation:"AN",code:42},{name:"Aosta",abbreviation:"AO",code:7},{name:"L'Aquila",abbreviation:"AQ",code:66},{name:"Arezzo",abbreviation:"AR",code:51},{name:"Ascoli-Piceno",abbreviation:"AP",code:44},{name:"Asti",abbreviation:"AT",code:5},{name:"Avellino",abbreviation:"AV",code:64},{name:"Bari",abbreviation:"BA",code:72},{name:"Barletta-Andria-Trani",abbreviation:"BT",code:72},{name:"Belluno",abbreviation:"BL",code:25},{name:"Benevento",abbreviation:"BN",code:62},{name:"Bergamo",abbreviation:"BG",code:16},{name:"Biella",abbreviation:"BI",code:96},{name:"Bologna",abbreviation:"BO",code:37},{name:"Bolzano",abbreviation:"BZ",code:21},{name:"Brescia",abbreviation:"BS",code:17},{name:"Brindisi",abbreviation:"BR",code:74},{name:"Cagliari",abbreviation:"CA",code:92},{name:"Caltanissetta",abbreviation:"CL",code:85},{name:"Campobasso",abbreviation:"CB",code:70},{name:"Carbonia Iglesias",abbreviation:"CI",code:70},{name:"Caserta",abbreviation:"CE",code:61},{name:"Catania",abbreviation:"CT",code:87},{name:"Catanzaro",abbreviation:"CZ",code:79},{name:"Chieti",abbreviation:"CH",code:69},{name:"Como",abbreviation:"CO",code:13},{name:"Cosenza",abbreviation:"CS",code:78},{name:"Cremona",abbreviation:"CR",code:19},{name:"Crotone",abbreviation:"KR",code:101},{name:"Cuneo",abbreviation:"CN",code:4},{name:"Enna",abbreviation:"EN",code:86},{name:"Fermo",abbreviation:"FM",code:86},{name:"Ferrara",abbreviation:"FE",code:38},{name:"Firenze",abbreviation:"FI",code:48},{name:"Foggia",abbreviation:"FG",code:71},{name:"Forli-Cesena",abbreviation:"FC",code:71},{name:"Frosinone",abbreviation:"FR",code:60},{name:"Genova",abbreviation:"GE",code:10},{name:"Gorizia",abbreviation:"GO",code:31},{name:"Grosseto",abbreviation:"GR",code:53},{name:"Imperia",abbreviation:"IM",code:8},{name:"Isernia",abbreviation:"IS",code:94},{name:"La-Spezia",abbreviation:"SP",code:66},{name:"Latina",abbreviation:"LT",code:59},{name:"Lecce",abbreviation:"LE",code:75},{name:"Lecco",abbreviation:"LC",code:97},{name:"Livorno",abbreviation:"LI",code:49},{name:"Lodi",abbreviation:"LO",code:98},{name:"Lucca",abbreviation:"LU",code:46},{name:"Macerata",abbreviation:"MC",code:43},{name:"Mantova",abbreviation:"MN",code:20},{name:"Massa-Carrara",abbreviation:"MS",code:45},{name:"Matera",abbreviation:"MT",code:77},{name:"Medio Campidano",abbreviation:"VS",code:77},{name:"Messina",abbreviation:"ME",code:83},{name:"Milano",abbreviation:"MI",code:15},{name:"Modena",abbreviation:"MO",code:36},{name:"Monza-Brianza",abbreviation:"MB",code:36},{name:"Napoli",abbreviation:"NA",code:63},{name:"Novara",abbreviation:"NO",code:3},{name:"Nuoro",abbreviation:"NU",code:91},{name:"Ogliastra",abbreviation:"OG",code:91},{name:"Olbia Tempio",abbreviation:"OT",code:91},{name:"Oristano",abbreviation:"OR",code:95},{name:"Padova",abbreviation:"PD",code:28},{name:"Palermo",abbreviation:"PA",code:82},{name:"Parma",abbreviation:"PR",code:34},{name:"Pavia",abbreviation:"PV",code:18},{name:"Perugia",abbreviation:"PG",code:54},{name:"Pesaro-Urbino",abbreviation:"PU",code:41},{name:"Pescara",abbreviation:"PE",code:68},{name:"Piacenza",abbreviation:"PC",code:33},{name:"Pisa",abbreviation:"PI",code:50},{name:"Pistoia",abbreviation:"PT",code:47},{name:"Pordenone",abbreviation:"PN",code:93},{name:"Potenza",abbreviation:"PZ",code:76},{name:"Prato",abbreviation:"PO",code:100},{name:"Ragusa",abbreviation:"RG",code:88},{name:"Ravenna",abbreviation:"RA",code:39},{name:"Reggio-Calabria",abbreviation:"RC",code:35},{name:"Reggio-Emilia",abbreviation:"RE",code:35},{name:"Rieti",abbreviation:"RI",code:57},{name:"Rimini",abbreviation:"RN",code:99},{name:"Roma",abbreviation:"Roma",code:58},{name:"Rovigo",abbreviation:"RO",code:29},{name:"Salerno",abbreviation:"SA",code:65},{name:"Sassari",abbreviation:"SS",code:90},{name:"Savona",abbreviation:"SV",code:9},{name:"Siena",abbreviation:"SI",code:52},{name:"Siracusa",abbreviation:"SR",code:89},{name:"Sondrio",abbreviation:"SO",code:14},{name:"Taranto",abbreviation:"TA",code:73},{name:"Teramo",abbreviation:"TE",code:67},{name:"Terni",abbreviation:"TR",code:55},{name:"Torino",abbreviation:"TO",code:1},{name:"Trapani",abbreviation:"TP",code:81},{name:"Trento",abbreviation:"TN",code:22},{name:"Treviso",abbreviation:"TV",code:26},{name:"Trieste",abbreviation:"TS",code:32},{name:"Udine",abbreviation:"UD",code:30},{name:"Varese",abbreviation:"VA",code:12},{name:"Venezia",abbreviation:"VE",code:27},{name:"Verbania",abbreviation:"VB",code:27},{name:"Vercelli",abbreviation:"VC",code:2},{name:"Verona",abbreviation:"VR",code:23},{name:"Vibo-Valentia",abbreviation:"VV",code:102},{name:"Vicenza",abbreviation:"VI",code:24},{name:"Viterbo",abbreviation:"VT",code:56}]},nationalities:[{name:"Afghan"},{name:"Albanian"},{name:"Algerian"},{name:"American"},{name:"Andorran"},{name:"Angolan"},{name:"Antiguans"},{name:"Argentinean"},{name:"Armenian"},{name:"Australian"},{name:"Austrian"},{name:"Azerbaijani"},{name:"Bahami"},{name:"Bahraini"},{name:"Bangladeshi"},{name:"Barbadian"},{name:"Barbudans"},{name:"Batswana"},{name:"Belarusian"},{name:"Belgian"},{name:"Belizean"},{name:"Beninese"},{name:"Bhutanese"},{name:"Bolivian"},{name:"Bosnian"},{name:"Brazilian"},{name:"British"},{name:"Bruneian"},{name:"Bulgarian"},{name:"Burkinabe"},{name:"Burmese"},{name:"Burundian"},{name:"Cambodian"},{name:"Cameroonian"},{name:"Canadian"},{name:"Cape Verdean"},{name:"Central African"},{name:"Chadian"},{name:"Chilean"},{name:"Chinese"},{name:"Colombian"},{name:"Comoran"},{name:"Congolese"},{name:"Costa Rican"},{name:"Croatian"},{name:"Cuban"},{name:"Cypriot"},{name:"Czech"},{name:"Danish"},{name:"Djibouti"},{name:"Dominican"},{name:"Dutch"},{name:"East Timorese"},{name:"Ecuadorean"},{name:"Egyptian"},{name:"Emirian"},{name:"Equatorial Guinean"},{name:"Eritrean"},{name:"Estonian"},{name:"Ethiopian"},{name:"Fijian"},{name:"Filipino"},{name:"Finnish"},{name:"French"},{name:"Gabonese"},{name:"Gambian"},{name:"Georgian"},{name:"German"},{name:"Ghanaian"},{name:"Greek"},{name:"Grenadian"},{name:"Guatemalan"},{name:"Guinea-Bissauan"},{name:"Guinean"},{name:"Guyanese"},{name:"Haitian"},{name:"Herzegovinian"},{name:"Honduran"},{name:"Hungarian"},{name:"I-Kiribati"},{name:"Icelander"},{name:"Indian"},{name:"Indonesian"},{name:"Iranian"},{name:"Iraqi"},{name:"Irish"},{name:"Israeli"},{name:"Italian"},{name:"Ivorian"},{name:"Jamaican"},{name:"Japanese"},{name:"Jordanian"},{name:"Kazakhstani"},{name:"Kenyan"},{name:"Kittian and Nevisian"},{name:"Kuwaiti"},{name:"Kyrgyz"},{name:"Laotian"},{name:"Latvian"},{name:"Lebanese"},{name:"Liberian"},{name:"Libyan"},{name:"Liechtensteiner"},{name:"Lithuanian"},{name:"Luxembourger"},{name:"Macedonian"},{name:"Malagasy"},{name:"Malawian"},{name:"Malaysian"},{name:"Maldivan"},{name:"Malian"},{name:"Maltese"},{name:"Marshallese"},{name:"Mauritanian"},{name:"Mauritian"},{name:"Mexican"},{name:"Micronesian"},{name:"Moldovan"},{name:"Monacan"},{name:"Mongolian"},{name:"Moroccan"},{name:"Mosotho"},{name:"Motswana"},{name:"Mozambican"},{name:"Namibian"},{name:"Nauruan"},{name:"Nepalese"},{name:"New Zealander"},{name:"Nicaraguan"},{name:"Nigerian"},{name:"Nigerien"},{name:"North Korean"},{name:"Northern Irish"},{name:"Norwegian"},{name:"Omani"},{name:"Pakistani"},{name:"Palauan"},{name:"Panamanian"},{name:"Papua New Guinean"},{name:"Paraguayan"},{name:"Peruvian"},{name:"Polish"},{name:"Portuguese"},{name:"Qatari"},{name:"Romani"},{name:"Russian"},{name:"Rwandan"},{name:"Saint Lucian"},{name:"Salvadoran"},{name:"Samoan"},{name:"San Marinese"},{name:"Sao Tomean"},{name:"Saudi"},{name:"Scottish"},{name:"Senegalese"},{name:"Serbian"},{name:"Seychellois"},{name:"Sierra Leonean"},{name:"Singaporean"},{name:"Slovakian"},{name:"Slovenian"},{name:"Solomon Islander"},{name:"Somali"},{name:"South African"},{name:"South Korean"},{name:"Spanish"},{name:"Sri Lankan"},{name:"Sudanese"},{name:"Surinamer"},{name:"Swazi"},{name:"Swedish"},{name:"Swiss"},{name:"Syrian"},{name:"Taiwanese"},{name:"Tajik"},{name:"Tanzanian"},{name:"Thai"},{name:"Togolese"},{name:"Tongan"},{name:"Trinidadian or Tobagonian"},{name:"Tunisian"},{name:"Turkish"},{name:"Tuvaluan"},{name:"Ugandan"},{name:"Ukrainian"},{name:"Uruguaya"},{name:"Uzbekistani"},{name:"Venezuela"},{name:"Vietnamese"},{name:"Wels"},{name:"Yemenit"},{name:"Zambia"},{name:"Zimbabwe"}],us_states_and_dc:[{name:"Alabama",abbreviation:"AL"},{name:"Alaska",abbreviation:"AK"},{name:"Arizona",abbreviation:"AZ"},{name:"Arkansas",abbreviation:"AR"},{name:"California",abbreviation:"CA"},{name:"Colorado",abbreviation:"CO"},{name:"Connecticut",abbreviation:"CT"},{name:"Delaware",abbreviation:"DE"},{name:"District of Columbia",abbreviation:"DC"},{name:"Florida",abbreviation:"FL"},{name:"Georgia",abbreviation:"GA"},{name:"Hawaii",abbreviation:"HI"},{name:"Idaho",abbreviation:"ID"},{name:"Illinois",abbreviation:"IL"},{name:"Indiana",abbreviation:"IN"},{name:"Iowa",abbreviation:"IA"},{name:"Kansas",abbreviation:"KS"},{name:"Kentucky",abbreviation:"KY"},{name:"Louisiana",abbreviation:"LA"},{name:"Maine",abbreviation:"ME"},{name:"Maryland",abbreviation:"MD"},{name:"Massachusetts",abbreviation:"MA"},{name:"Michigan",abbreviation:"MI"},{name:"Minnesota",abbreviation:"MN"},{name:"Mississippi",abbreviation:"MS"},{name:"Missouri",abbreviation:"MO"},{name:"Montana",abbreviation:"MT"},{name:"Nebraska",abbreviation:"NE"},{name:"Nevada",abbreviation:"NV"},{name:"New Hampshire",abbreviation:"NH"},{name:"New Jersey",abbreviation:"NJ"},{name:"New Mexico",abbreviation:"NM"},{name:"New York",abbreviation:"NY"},{name:"North Carolina",abbreviation:"NC"},{name:"North Dakota",abbreviation:"ND"},{name:"Ohio",abbreviation:"OH"},{name:"Oklahoma",abbreviation:"OK"},{name:"Oregon",abbreviation:"OR"},{name:"Pennsylvania",abbreviation:"PA"},{name:"Rhode Island",abbreviation:"RI"},{name:"South Carolina",abbreviation:"SC"},{name:"South Dakota",abbreviation:"SD"},{name:"Tennessee",abbreviation:"TN"},{name:"Texas",abbreviation:"TX"},{name:"Utah",abbreviation:"UT"},{name:"Vermont",abbreviation:"VT"},{name:"Virginia",abbreviation:"VA"},{name:"Washington",abbreviation:"WA"},{name:"West Virginia",abbreviation:"WV"},{name:"Wisconsin",abbreviation:"WI"},{name:"Wyoming",abbreviation:"WY"}],territories:[{name:"American Samoa",abbreviation:"AS"},{name:"Federated States of Micronesia",abbreviation:"FM"},{name:"Guam",abbreviation:"GU"},{name:"Marshall Islands",abbreviation:"MH"},{name:"Northern Mariana Islands",abbreviation:"MP"},{name:"Puerto Rico",abbreviation:"PR"},{name:"Virgin Islands, U.S.",abbreviation:"VI"}],armed_forces:[{name:"Armed Forces Europe",abbreviation:"AE"},{name:"Armed Forces Pacific",abbreviation:"AP"},{name:"Armed Forces the Americas",abbreviation:"AA"}],country_regions:{it:[{name:"Valle d'Aosta",abbreviation:"VDA"},{name:"Piemonte",abbreviation:"PIE"},{name:"Lombardia",abbreviation:"LOM"},{name:"Veneto",abbreviation:"VEN"},{name:"Trentino Alto Adige",abbreviation:"TAA"},{name:"Friuli Venezia Giulia",abbreviation:"FVG"},{name:"Liguria",abbreviation:"LIG"},{name:"Emilia Romagna",abbreviation:"EMR"},{name:"Toscana",abbreviation:"TOS"},{name:"Umbria",abbreviation:"UMB"},{name:"Marche",abbreviation:"MAR"},{name:"Abruzzo",abbreviation:"ABR"},{name:"Lazio",abbreviation:"LAZ"},{name:"Campania",abbreviation:"CAM"},{name:"Puglia",abbreviation:"PUG"},{name:"Basilicata",abbreviation:"BAS"},{name:"Molise",abbreviation:"MOL"},{name:"Calabria",abbreviation:"CAL"},{name:"Sicilia",abbreviation:"SIC"},{name:"Sardegna",abbreviation:"SAR"}]},street_suffixes:{us:[{name:"Avenue",abbreviation:"Ave"},{name:"Boulevard",abbreviation:"Blvd"},{name:"Center",abbreviation:"Ctr"},{name:"Circle",abbreviation:"Cir"},{name:"Court",abbreviation:"Ct"},{name:"Drive",abbreviation:"Dr"},{name:"Extension",abbreviation:"Ext"},{name:"Glen",abbreviation:"Gln"},{name:"Grove",abbreviation:"Grv"},{name:"Heights",abbreviation:"Hts"},{name:"Highway",abbreviation:"Hwy"},{name:"Junction",abbreviation:"Jct"},{name:"Key",abbreviation:"Key"},{name:"Lane",abbreviation:"Ln"},{name:"Loop",abbreviation:"Loop"},{name:"Manor",abbreviation:"Mnr"},{name:"Mill",abbreviation:"Mill"},{name:"Park",abbreviation:"Park"},{name:"Parkway",abbreviation:"Pkwy"},{name:"Pass",abbreviation:"Pass"},{name:"Path",abbreviation:"Path"},{name:"Pike",abbreviation:"Pike"},{name:"Place",abbreviation:"Pl"},{name:"Plaza",abbreviation:"Plz"},{name:"Point",abbreviation:"Pt"},{name:"Ridge",abbreviation:"Rdg"},{name:"River",abbreviation:"Riv"},{name:"Road",abbreviation:"Rd"},{name:"Square",abbreviation:"Sq"},{name:"Street",abbreviation:"St"},{name:"Terrace",abbreviation:"Ter"},{name:"Trail",abbreviation:"Trl"},{name:"Turnpike",abbreviation:"Tpke"},{name:"View",abbreviation:"Vw"},{name:"Way",abbreviation:"Way"}],it:[{name:"Accesso",abbreviation:"Acc."},{name:"Alzaia",abbreviation:"Alz."},{name:"Arco",abbreviation:"Arco"},{name:"Archivolto",abbreviation:"Acv."},{name:"Arena",abbreviation:"Arena"},{name:"Argine",abbreviation:"Argine"},{name:"Bacino",abbreviation:"Bacino"},{name:"Banchi",abbreviation:"Banchi"},{name:"Banchina",abbreviation:"Ban."},{name:"Bastioni",abbreviation:"Bas."},{name:"Belvedere",abbreviation:"Belv."},{name:"Borgata",abbreviation:"B.ta"},{name:"Borgo",abbreviation:"B.go"},{name:"Calata",abbreviation:"Cal."},{name:"Calle",abbreviation:"Calle"},{name:"Campiello",abbreviation:"Cam."},{name:"Campo",abbreviation:"Cam."},{name:"Canale",abbreviation:"Can."},{name:"Carraia",abbreviation:"Carr."},{name:"Cascina",abbreviation:"Cascina"},{name:"Case sparse",abbreviation:"c.s."},{name:"Cavalcavia",abbreviation:"Cv."},{name:"Circonvallazione",abbreviation:"Cv."},{name:"Complanare",abbreviation:"C.re"},{name:"Contrada",abbreviation:"C.da"},{name:"Corso",abbreviation:"C.so"},{name:"Corte",abbreviation:"C.te"},{name:"Cortile",abbreviation:"C.le"},{name:"Diramazione",abbreviation:"Dir."},{name:"Fondaco",abbreviation:"F.co"},{name:"Fondamenta",abbreviation:"F.ta"},{name:"Fondo",abbreviation:"F.do"},{name:"Frazione",abbreviation:"Fr."},{name:"Isola",abbreviation:"Is."},{name:"Largo",abbreviation:"L.go"},{name:"Litoranea",abbreviation:"Lit."},{name:"Lungolago",abbreviation:"L.go lago"},{name:"Lungo Po",abbreviation:"l.go Po"},{name:"Molo",abbreviation:"Molo"},{name:"Mura",abbreviation:"Mura"},{name:"Passaggio privato",abbreviation:"pass. priv."},{name:"Passeggiata",abbreviation:"Pass."},{name:"Piazza",abbreviation:"P.zza"},{name:"Piazzale",abbreviation:"P.le"},{name:"Ponte",abbreviation:"P.te"},{name:"Portico",abbreviation:"P.co"},{name:"Rampa",abbreviation:"Rampa"},{name:"Regione",abbreviation:"Reg."},{name:"Rione",abbreviation:"R.ne"},{name:"Rio",abbreviation:"Rio"},{name:"Ripa",abbreviation:"Ripa"},{name:"Riva",abbreviation:"Riva"},{name:"Rondò",abbreviation:"Rondò"},{name:"Rotonda",abbreviation:"Rot."},{name:"Sagrato",abbreviation:"Sagr."},{name:"Salita",abbreviation:"Sal."},{name:"Scalinata",abbreviation:"Scal."},{name:"Scalone",abbreviation:"Scal."},{name:"Slargo",abbreviation:"Sl."},{name:"Sottoportico",abbreviation:"Sott."},{name:"Strada",abbreviation:"Str."},{name:"Stradale",abbreviation:"Str.le"},{name:"Strettoia",abbreviation:"Strett."},{name:"Traversa",abbreviation:"Trav."},{name:"Via",abbreviation:"V."},{name:"Viale",abbreviation:"V.le"},{name:"Vicinale",abbreviation:"Vic.le"},{name:"Vicolo",abbreviation:"Vic."}]},months:[{name:"January",short_name:"Jan",numeric:"01",days:31},{name:"February",short_name:"Feb",numeric:"02",days:28},{name:"March",short_name:"Mar",numeric:"03",days:31},{name:"April",short_name:"Apr",numeric:"04",days:30},{name:"May",short_name:"May",numeric:"05",days:31},{name:"June",short_name:"Jun",numeric:"06",days:30},{name:"July",short_name:"Jul",numeric:"07",days:31},{name:"August",short_name:"Aug",numeric:"08",days:31},{name:"September",short_name:"Sep",numeric:"09",days:30},{name:"October",short_name:"Oct",numeric:"10",days:31},{name:"November",short_name:"Nov",numeric:"11",days:30},{name:"December",short_name:"Dec",numeric:"12",days:31}],cc_types:[{name:"American Express",short_name:"amex",prefix:"34",length:15},{name:"Bankcard",short_name:"bankcard",prefix:"5610",length:16},{name:"China UnionPay",short_name:"chinaunion",prefix:"62",length:16},{name:"Diners Club Carte Blanche",short_name:"dccarte",prefix:"300",length:14},{name:"Diners Club enRoute",short_name:"dcenroute",prefix:"2014",length:15},{name:"Diners Club International",short_name:"dcintl",prefix:"36",length:14},{name:"Diners Club United States & Canada",short_name:"dcusc",prefix:"54",length:16},{name:"Discover Card",short_name:"discover",prefix:"6011",length:16},{name:"InstaPayment",short_name:"instapay",prefix:"637",length:16},{name:"JCB",short_name:"jcb",prefix:"3528",length:16},{name:"Laser",short_name:"laser",prefix:"6304",length:16},{name:"Maestro",short_name:"maestro",prefix:"5018",length:16},{name:"Mastercard",short_name:"mc",prefix:"51",length:16},{name:"Solo",short_name:"solo",prefix:"6334",length:16},{name:"Switch",short_name:"switch",prefix:"4903",length:16},{name:"Visa",short_name:"visa",prefix:"4",length:16},{name:"Visa Electron",short_name:"electron",prefix:"4026",length:16}],currency_types:[{code:"AED",name:"United Arab Emirates Dirham"},{code:"AFN",name:"Afghanistan Afghani"},{code:"ALL",name:"Albania Lek"},{code:"AMD",name:"Armenia Dram"},{code:"ANG",name:"Netherlands Antilles Guilder"},{code:"AOA",name:"Angola Kwanza"},{code:"ARS",name:"Argentina Peso"},{code:"AUD",name:"Australia Dollar"},{code:"AWG",name:"Aruba Guilder"},{code:"AZN",name:"Azerbaijan New Manat"},{code:"BAM",name:"Bosnia and Herzegovina Convertible Marka"},{code:"BBD",name:"Barbados Dollar"},{code:"BDT",name:"Bangladesh Taka"},{code:"BGN",name:"Bulgaria Lev"},{code:"BHD",name:"Bahrain Dinar"},{code:"BIF",name:"Burundi Franc"},{code:"BMD",name:"Bermuda Dollar"},{code:"BND",name:"Brunei Darussalam Dollar"},{code:"BOB",name:"Bolivia Boliviano"},{code:"BRL",name:"Brazil Real"},{code:"BSD",name:"Bahamas Dollar"},{code:"BTN",name:"Bhutan Ngultrum"},{code:"BWP",name:"Botswana Pula"},{code:"BYR",name:"Belarus Ruble"},{code:"BZD",name:"Belize Dollar"},{code:"CAD",name:"Canada Dollar"},{code:"CDF",name:"Congo/Kinshasa Franc"},{code:"CHF",name:"Switzerland Franc"},{code:"CLP",name:"Chile Peso"},{code:"CNY",name:"China Yuan Renminbi"},{code:"COP",name:"Colombia Peso"},{code:"CRC",name:"Costa Rica Colon"},{code:"CUC",name:"Cuba Convertible Peso"},{code:"CUP",name:"Cuba Peso"},{code:"CVE",name:"Cape Verde Escudo"},{code:"CZK",name:"Czech Republic Koruna"},{code:"DJF",name:"Djibouti Franc"},{code:"DKK",name:"Denmark Krone"},{code:"DOP",name:"Dominican Republic Peso"},{code:"DZD",name:"Algeria Dinar"},{code:"EGP",name:"Egypt Pound"},{code:"ERN",name:"Eritrea Nakfa"},{code:"ETB",name:"Ethiopia Birr"},{code:"EUR",name:"Euro Member Countries"},{code:"FJD",name:"Fiji Dollar"},{code:"FKP",name:"Falkland Islands (Malvinas) Pound"},{code:"GBP",name:"United Kingdom Pound"},{code:"GEL",name:"Georgia Lari"},{code:"GGP",name:"Guernsey Pound"},{code:"GHS",name:"Ghana Cedi"},{code:"GIP",name:"Gibraltar Pound"},{code:"GMD",name:"Gambia Dalasi"},{code:"GNF",name:"Guinea Franc"},{code:"GTQ",name:"Guatemala Quetzal"},{code:"GYD",name:"Guyana Dollar"},{code:"HKD",name:"Hong Kong Dollar"},{code:"HNL",name:"Honduras Lempira"},{code:"HRK",name:"Croatia Kuna"},{code:"HTG",name:"Haiti Gourde"},{code:"HUF",name:"Hungary Forint"},{code:"IDR",name:"Indonesia Rupiah"},{code:"ILS",name:"Israel Shekel"},{code:"IMP",name:"Isle of Man Pound"},{code:"INR",name:"India Rupee"},{code:"IQD",name:"Iraq Dinar"},{code:"IRR",name:"Iran Rial"},{code:"ISK",name:"Iceland Krona"},{code:"JEP",name:"Jersey Pound"},{code:"JMD",name:"Jamaica Dollar"},{code:"JOD",name:"Jordan Dinar"},{code:"JPY",name:"Japan Yen"},{code:"KES",name:"Kenya Shilling"},{code:"KGS",name:"Kyrgyzstan Som"},{code:"KHR",name:"Cambodia Riel"},{code:"KMF",name:"Comoros Franc"},{code:"KPW",name:"Korea (North) Won"},{code:"KRW",name:"Korea (South) Won"},{code:"KWD",name:"Kuwait Dinar"},{code:"KYD",name:"Cayman Islands Dollar"},{code:"KZT",name:"Kazakhstan Tenge"},{code:"LAK",name:"Laos Kip"},{code:"LBP",name:"Lebanon Pound"},{code:"LKR",name:"Sri Lanka Rupee"},{code:"LRD",name:"Liberia Dollar"},{code:"LSL",name:"Lesotho Loti"},{code:"LTL",name:"Lithuania Litas"},{code:"LYD",name:"Libya Dinar"},{code:"MAD",name:"Morocco Dirham"},{code:"MDL",name:"Moldova Leu"},{code:"MGA",name:"Madagascar Ariary"},{code:"MKD",name:"Macedonia Denar"},{code:"MMK",name:"Myanmar (Burma) Kyat"},{code:"MNT",name:"Mongolia Tughrik"},{code:"MOP",name:"Macau Pataca"},{code:"MRO",name:"Mauritania Ouguiya"},{code:"MUR",name:"Mauritius Rupee"},{code:"MVR",name:"Maldives (Maldive Islands) Rufiyaa"},{code:"MWK",name:"Malawi Kwacha"},{code:"MXN",name:"Mexico Peso"},{code:"MYR",name:"Malaysia Ringgit"},{code:"MZN",name:"Mozambique Metical"},{code:"NAD",name:"Namibia Dollar"},{code:"NGN",name:"Nigeria Naira"},{code:"NIO",name:"Nicaragua Cordoba"},{code:"NOK",name:"Norway Krone"},{code:"NPR",name:"Nepal Rupee"},{code:"NZD",name:"New Zealand Dollar"},{code:"OMR",name:"Oman Rial"},{code:"PAB",name:"Panama Balboa"},{code:"PEN",name:"Peru Nuevo Sol"},{code:"PGK",name:"Papua New Guinea Kina"},{code:"PHP",name:"Philippines Peso"},{code:"PKR",name:"Pakistan Rupee"},{code:"PLN",name:"Poland Zloty"},{code:"PYG",name:"Paraguay Guarani"},{code:"QAR",name:"Qatar Riyal"},{code:"RON",name:"Romania New Leu"},{code:"RSD",name:"Serbia Dinar"},{code:"RUB",name:"Russia Ruble"},{code:"RWF",name:"Rwanda Franc"},{code:"SAR",name:"Saudi Arabia Riyal"},{code:"SBD",name:"Solomon Islands Dollar"},{code:"SCR",name:"Seychelles Rupee"},{code:"SDG",name:"Sudan Pound"},{code:"SEK",name:"Sweden Krona"},{code:"SGD",name:"Singapore Dollar"},{code:"SHP",name:"Saint Helena Pound"},{code:"SLL",name:"Sierra Leone Leone"},{code:"SOS",name:"Somalia Shilling"},{code:"SPL",name:"Seborga Luigino"},{code:"SRD",name:"Suriname Dollar"},{code:"STD",name:"São Tomé and Príncipe Dobra"},{code:"SVC",name:"El Salvador Colon"},{code:"SYP",name:"Syria Pound"},{code:"SZL",name:"Swaziland Lilangeni"},{code:"THB",name:"Thailand Baht"},{code:"TJS",name:"Tajikistan Somoni"},{code:"TMT",name:"Turkmenistan Manat"},{code:"TND",name:"Tunisia Dinar"},{code:"TOP",name:"Tonga Pa'anga"},{code:"TRY",name:"Turkey Lira"},{code:"TTD",name:"Trinidad and Tobago Dollar"},{code:"TVD",name:"Tuvalu Dollar"},{code:"TWD",name:"Taiwan New Dollar"},{code:"TZS",name:"Tanzania Shilling"},{code:"UAH",name:"Ukraine Hryvnia"},{code:"UGX",name:"Uganda Shilling"},{code:"USD",name:"United States Dollar"},{code:"UYU",name:"Uruguay Peso"},{code:"UZS",name:"Uzbekistan Som"},{code:"VEF",name:"Venezuela Bolivar"},{code:"VND",name:"Viet Nam Dong"},{code:"VUV",name:"Vanuatu Vatu"},{code:"WST",name:"Samoa Tala"},{code:"XAF",name:"Communauté Financière Africaine (BEAC) CFA Franc BEAC"},{code:"XCD",name:"East Caribbean Dollar"},{code:"XDR",name:"International Monetary Fund (IMF) Special Drawing Rights"},{code:"XOF",name:"Communauté Financière Africaine (BCEAO) Franc"},{code:"XPF",name:"Comptoirs Français du Pacifique (CFP) Franc"},{code:"YER",name:"Yemen Rial"},{code:"ZAR",name:"South Africa Rand"},{code:"ZMW",name:"Zambia Kwacha"},{code:"ZWD",name:"Zimbabwe Dollar"}],colorNames:["AliceBlue","Black","Navy","DarkBlue","MediumBlue","Blue","DarkGreen","Green","Teal","DarkCyan","DeepSkyBlue","DarkTurquoise","MediumSpringGreen","Lime","SpringGreen","Aqua","Cyan","MidnightBlue","DodgerBlue","LightSeaGreen","ForestGreen","SeaGreen","DarkSlateGray","LimeGreen","MediumSeaGreen","Turquoise","RoyalBlue","SteelBlue","DarkSlateBlue","MediumTurquoise","Indigo","DarkOliveGreen","CadetBlue","CornflowerBlue","RebeccaPurple","MediumAquaMarine","DimGray","SlateBlue","OliveDrab","SlateGray","LightSlateGray","MediumSlateBlue","LawnGreen","Chartreuse","Aquamarine","Maroon","Purple","Olive","Gray","SkyBlue","LightSkyBlue","BlueViolet","DarkRed","DarkMagenta","SaddleBrown","Ivory","White","DarkSeaGreen","LightGreen","MediumPurple","DarkViolet","PaleGreen","DarkOrchid","YellowGreen","Sienna","Brown","DarkGray","LightBlue","GreenYellow","PaleTurquoise","LightSteelBlue","PowderBlue","FireBrick","DarkGoldenRod","MediumOrchid","RosyBrown","DarkKhaki","Silver","MediumVioletRed","IndianRed","Peru","Chocolate","Tan","LightGray","Thistle","Orchid","GoldenRod","PaleVioletRed","Crimson","Gainsboro","Plum","BurlyWood","LightCyan","Lavender","DarkSalmon","Violet","PaleGoldenRod","LightCoral","Khaki","AliceBlue","HoneyDew","Azure","SandyBrown","Wheat","Beige","WhiteSmoke","MintCream","GhostWhite","Salmon","AntiqueWhite","Linen","LightGoldenRodYellow","OldLace","Red","Fuchsia","Magenta","DeepPink","OrangeRed","Tomato","HotPink","Coral","DarkOrange","LightSalmon","Orange","LightPink","Pink","Gold","PeachPuff","NavajoWhite","Moccasin","Bisque","MistyRose","BlanchedAlmond","PapayaWhip","LavenderBlush","SeaShell","Cornsilk","LemonChiffon","FloralWhite","Snow","Yellow","LightYellow"],fileExtension:{raster:["bmp","gif","gpl","ico","jpeg","psd","png","psp","raw","tiff"],vector:["3dv","amf","awg","ai","cgm","cdr","cmx","dxf","e2d","egt","eps","fs","odg","svg","xar"],"3d":["3dmf","3dm","3mf","3ds","an8","aoi","blend","cal3d","cob","ctm","iob","jas","max","mb","mdx","obj","x","x3d"],document:["doc","docx","dot","html","xml","odt","odm","ott","csv","rtf","tex","xhtml","xps"]}},M=Object.prototype.hasOwnProperty,B=Object.keys||function(a){var e=[];for(var n in a)M.call(a,n)&&e.push(n);return e};r.prototype.get=function(a){return h(C[a])},r.prototype.mac_address=function(a){a=o(a),a.separator||(a.separator=a.networkVersion?".":":");var e="ABCDEF1234567890",n="";return n=a.networkVersion?this.n(this.string,3,{pool:e,length:4}).join(a.separator):this.n(this.string,6,{pool:e,length:2}).join(a.separator)},r.prototype.normal=function(a){if(a=o(a,{mean:0,dev:1,pool:[]}),s(a.pool.constructor!==Array,"Chance: The pool option must be a valid array."),a.pool.length>0)return this.normal_pool(a);var e,n,i,t,r=a.mean,l=a.dev;do n=2*this.random()-1,i=2*this.random()-1,e=n*n+i*i;while(e>=1);return t=n*Math.sqrt(-2*Math.log(e)/e),l*t+r},r.prototype.normal_pool=function(a){var e=0;do{var n=Math.round(this.normal({mean:a.mean,dev:a.dev}));if(n<a.pool.length&&n>=0)return a.pool[n];e++}while(e<100);throw new RangeError("Chance: Your pool is too small for the given mean and standard deviation. Please adjust.")},r.prototype.radio=function(a){a=o(a,{side:"?"});var e="";switch(a.side.toLowerCase()){case"east":case"e":e="W";break;case"west":case"w":e="K";break;default:e=this.character({pool:"KW"})}return e+this.character({alpha:!0,casing:"upper"})+this.character({alpha:!0,casing:"upper"})+this.character({alpha:!0,casing:"upper"})},r.prototype.set=function(a,e){"string"==typeof a?C[a]=e:C=h(a,C)},r.prototype.tv=function(a){return this.radio(a)},r.prototype.cnpj=function(){var a=this.n(this.natural,8,{max:9}),e=2+6*a[7]+7*a[6]+8*a[5]+9*a[4]+2*a[3]+3*a[2]+4*a[1]+5*a[0];e=11-e%11,e>=10&&(e=0);var n=2*e+3+7*a[7]+8*a[6]+9*a[5]+2*a[4]+3*a[3]+4*a[2]+5*a[1]+6*a[0];return n=11-n%11,n>=10&&(n=0),""+a[0]+a[1]+"."+a[2]+a[3]+a[4]+"."+a[5]+a[6]+a[7]+"/0001-"+e+n},r.prototype.mersenne_twister=function(a){return new S(a)},r.prototype.blueimp_md5=function(){return new A};var S=function(a){void 0===a&&(a=Math.floor(Math.random()*Math.pow(10,13))),this.N=624,this.M=397,this.MATRIX_A=2567483615,this.UPPER_MASK=2147483648,this.LOWER_MASK=2147483647,this.mt=new Array(this.N),this.mti=this.N+1,this.init_genrand(a)};S.prototype.init_genrand=function(a){for(this.mt[0]=a>>>0,this.mti=1;this.mti<this.N;this.mti++)a=this.mt[this.mti-1]^this.mt[this.mti-1]>>>30,this.mt[this.mti]=(1812433253*((4294901760&a)>>>16)<<16)+1812433253*(65535&a)+this.mti,this.mt[this.mti]>>>=0},S.prototype.init_by_array=function(a,e){var n,i,t=1,r=0;for(this.init_genrand(19650218),n=this.N>e?this.N:e;n;n--)i=this.mt[t-1]^this.mt[t-1]>>>30,this.mt[t]=(this.mt[t]^(1664525*((4294901760&i)>>>16)<<16)+1664525*(65535&i))+a[r]+r,this.mt[t]>>>=0,t++,r++,t>=this.N&&(this.mt[0]=this.mt[this.N-1],t=1),r>=e&&(r=0);for(n=this.N-1;n;n--)i=this.mt[t-1]^this.mt[t-1]>>>30,this.mt[t]=(this.mt[t]^(1566083941*((4294901760&i)>>>16)<<16)+1566083941*(65535&i))-t,this.mt[t]>>>=0,t++,t>=this.N&&(this.mt[0]=this.mt[this.N-1],t=1);this.mt[0]=2147483648},S.prototype.genrand_int32=function(){var a,e=new Array(0,this.MATRIX_A);if(this.mti>=this.N){var n;for(this.mti===this.N+1&&this.init_genrand(5489),n=0;n<this.N-this.M;n++)a=this.mt[n]&this.UPPER_MASK|this.mt[n+1]&this.LOWER_MASK,this.mt[n]=this.mt[n+this.M]^a>>>1^e[1&a];for(;n<this.N-1;n++)a=this.mt[n]&this.UPPER_MASK|this.mt[n+1]&this.LOWER_MASK,this.mt[n]=this.mt[n+(this.M-this.N)]^a>>>1^e[1&a];a=this.mt[this.N-1]&this.UPPER_MASK|this.mt[0]&this.LOWER_MASK,
this.mt[this.N-1]=this.mt[this.M-1]^a>>>1^e[1&a],this.mti=0}return a=this.mt[this.mti++],a^=a>>>11,a^=a<<7&2636928640,a^=a<<15&4022730752,a^=a>>>18,a>>>0},S.prototype.genrand_int31=function(){return this.genrand_int32()>>>1},S.prototype.genrand_real1=function(){return this.genrand_int32()*(1/4294967295)},S.prototype.random=function(){return this.genrand_int32()*(1/4294967296)},S.prototype.genrand_real3=function(){return(this.genrand_int32()+.5)*(1/4294967296)},S.prototype.genrand_res53=function(){var a=this.genrand_int32()>>>5,e=this.genrand_int32()>>>6;return(67108864*a+e)*(1/9007199254740992)};var A=function(){};A.prototype.VERSION="1.0.1",A.prototype.safe_add=function(a,e){var n=(65535&a)+(65535&e),i=(a>>16)+(e>>16)+(n>>16);return i<<16|65535&n},A.prototype.bit_roll=function(a,e){return a<<e|a>>>32-e},A.prototype.md5_cmn=function(a,e,n,i,t,r){return this.safe_add(this.bit_roll(this.safe_add(this.safe_add(e,a),this.safe_add(i,r)),t),n)},A.prototype.md5_ff=function(a,e,n,i,t,r,o){return this.md5_cmn(e&n|~e&i,a,e,t,r,o)},A.prototype.md5_gg=function(a,e,n,i,t,r,o){return this.md5_cmn(e&i|n&~i,a,e,t,r,o)},A.prototype.md5_hh=function(a,e,n,i,t,r,o){return this.md5_cmn(e^n^i,a,e,t,r,o)},A.prototype.md5_ii=function(a,e,n,i,t,r,o){return this.md5_cmn(n^(e|~i),a,e,t,r,o)},A.prototype.binl_md5=function(a,e){a[e>>5]|=128<<e%32,a[(e+64>>>9<<4)+14]=e;var n,i,t,r,o,s=1732584193,l=-271733879,m=-1732584194,c=271733878;for(n=0;n<a.length;n+=16)i=s,t=l,r=m,o=c,s=this.md5_ff(s,l,m,c,a[n],7,-680876936),c=this.md5_ff(c,s,l,m,a[n+1],12,-389564586),m=this.md5_ff(m,c,s,l,a[n+2],17,606105819),l=this.md5_ff(l,m,c,s,a[n+3],22,-1044525330),s=this.md5_ff(s,l,m,c,a[n+4],7,-176418897),c=this.md5_ff(c,s,l,m,a[n+5],12,1200080426),m=this.md5_ff(m,c,s,l,a[n+6],17,-1473231341),l=this.md5_ff(l,m,c,s,a[n+7],22,-45705983),s=this.md5_ff(s,l,m,c,a[n+8],7,1770035416),c=this.md5_ff(c,s,l,m,a[n+9],12,-1958414417),m=this.md5_ff(m,c,s,l,a[n+10],17,-42063),l=this.md5_ff(l,m,c,s,a[n+11],22,-1990404162),s=this.md5_ff(s,l,m,c,a[n+12],7,1804603682),c=this.md5_ff(c,s,l,m,a[n+13],12,-40341101),m=this.md5_ff(m,c,s,l,a[n+14],17,-1502002290),l=this.md5_ff(l,m,c,s,a[n+15],22,1236535329),s=this.md5_gg(s,l,m,c,a[n+1],5,-165796510),c=this.md5_gg(c,s,l,m,a[n+6],9,-1069501632),m=this.md5_gg(m,c,s,l,a[n+11],14,643717713),l=this.md5_gg(l,m,c,s,a[n],20,-373897302),s=this.md5_gg(s,l,m,c,a[n+5],5,-701558691),c=this.md5_gg(c,s,l,m,a[n+10],9,38016083),m=this.md5_gg(m,c,s,l,a[n+15],14,-660478335),l=this.md5_gg(l,m,c,s,a[n+4],20,-405537848),s=this.md5_gg(s,l,m,c,a[n+9],5,568446438),c=this.md5_gg(c,s,l,m,a[n+14],9,-1019803690),m=this.md5_gg(m,c,s,l,a[n+3],14,-187363961),l=this.md5_gg(l,m,c,s,a[n+8],20,1163531501),s=this.md5_gg(s,l,m,c,a[n+13],5,-1444681467),c=this.md5_gg(c,s,l,m,a[n+2],9,-51403784),m=this.md5_gg(m,c,s,l,a[n+7],14,1735328473),l=this.md5_gg(l,m,c,s,a[n+12],20,-1926607734),s=this.md5_hh(s,l,m,c,a[n+5],4,-378558),c=this.md5_hh(c,s,l,m,a[n+8],11,-2022574463),m=this.md5_hh(m,c,s,l,a[n+11],16,1839030562),l=this.md5_hh(l,m,c,s,a[n+14],23,-35309556),s=this.md5_hh(s,l,m,c,a[n+1],4,-1530992060),c=this.md5_hh(c,s,l,m,a[n+4],11,1272893353),m=this.md5_hh(m,c,s,l,a[n+7],16,-155497632),l=this.md5_hh(l,m,c,s,a[n+10],23,-1094730640),s=this.md5_hh(s,l,m,c,a[n+13],4,681279174),c=this.md5_hh(c,s,l,m,a[n],11,-358537222),m=this.md5_hh(m,c,s,l,a[n+3],16,-722521979),l=this.md5_hh(l,m,c,s,a[n+6],23,76029189),s=this.md5_hh(s,l,m,c,a[n+9],4,-640364487),c=this.md5_hh(c,s,l,m,a[n+12],11,-421815835),m=this.md5_hh(m,c,s,l,a[n+15],16,530742520),l=this.md5_hh(l,m,c,s,a[n+2],23,-995338651),s=this.md5_ii(s,l,m,c,a[n],6,-198630844),c=this.md5_ii(c,s,l,m,a[n+7],10,1126891415),m=this.md5_ii(m,c,s,l,a[n+14],15,-1416354905),l=this.md5_ii(l,m,c,s,a[n+5],21,-57434055),s=this.md5_ii(s,l,m,c,a[n+12],6,1700485571),c=this.md5_ii(c,s,l,m,a[n+3],10,-1894986606),m=this.md5_ii(m,c,s,l,a[n+10],15,-1051523),l=this.md5_ii(l,m,c,s,a[n+1],21,-2054922799),s=this.md5_ii(s,l,m,c,a[n+8],6,1873313359),c=this.md5_ii(c,s,l,m,a[n+15],10,-30611744),m=this.md5_ii(m,c,s,l,a[n+6],15,-1560198380),l=this.md5_ii(l,m,c,s,a[n+13],21,1309151649),s=this.md5_ii(s,l,m,c,a[n+4],6,-145523070),c=this.md5_ii(c,s,l,m,a[n+11],10,-1120210379),m=this.md5_ii(m,c,s,l,a[n+2],15,718787259),l=this.md5_ii(l,m,c,s,a[n+9],21,-343485551),s=this.safe_add(s,i),l=this.safe_add(l,t),m=this.safe_add(m,r),c=this.safe_add(c,o);return[s,l,m,c]},A.prototype.binl2rstr=function(a){var e,n="";for(e=0;e<32*a.length;e+=8)n+=String.fromCharCode(a[e>>5]>>>e%32&255);return n},A.prototype.rstr2binl=function(a){var e,n=[];for(n[(a.length>>2)-1]=void 0,e=0;e<n.length;e+=1)n[e]=0;for(e=0;e<8*a.length;e+=8)n[e>>5]|=(255&a.charCodeAt(e/8))<<e%32;return n},A.prototype.rstr_md5=function(a){return this.binl2rstr(this.binl_md5(this.rstr2binl(a),8*a.length))},A.prototype.rstr_hmac_md5=function(a,e){var n,i,t=this.rstr2binl(a),r=[],o=[];for(r[15]=o[15]=void 0,t.length>16&&(t=this.binl_md5(t,8*a.length)),n=0;n<16;n+=1)r[n]=909522486^t[n],o[n]=1549556828^t[n];return i=this.binl_md5(r.concat(this.rstr2binl(e)),512+8*e.length),this.binl2rstr(this.binl_md5(o.concat(i),640))},A.prototype.rstr2hex=function(a){var e,n,i="0123456789abcdef",t="";for(n=0;n<a.length;n+=1)e=a.charCodeAt(n),t+=i.charAt(e>>>4&15)+i.charAt(15&e);return t},A.prototype.str2rstr_utf8=function(a){return unescape(encodeURIComponent(a))},A.prototype.raw_md5=function(a){return this.rstr_md5(this.str2rstr_utf8(a))},A.prototype.hex_md5=function(a){return this.rstr2hex(this.raw_md5(a))},A.prototype.raw_hmac_md5=function(a,e){return this.rstr_hmac_md5(this.str2rstr_utf8(a),this.str2rstr_utf8(e))},A.prototype.hex_hmac_md5=function(a,e){return this.rstr2hex(this.raw_hmac_md5(a,e))},A.prototype.md5=function(a,e,n){return e?n?this.raw_hmac_md5(e,a):this.hex_hmac_md5(e,a):n?this.raw_md5(a):this.hex_md5(a)},"undefined"!=typeof a&&a.exports&&(e=a.exports=r),e.Chance=r,i=[],t=function(){return r}.apply(e,i),!(void 0!==t&&(a.exports=t)),"undefined"!=typeof importScripts&&(chance=new r),"object"==typeof window&&"object"==typeof window.document&&(window.Chance=r,window.chance=new r)}()}).call(e,n(7).Buffer)},function(a,e,n){(function(a,i){"use strict";function t(){function a(){}try{var e=new Uint8Array(1);return e.foo=function(){return 42},e.constructor=a,42===e.foo()&&e.constructor===a&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(n){return!1}}function r(){return a.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function a(e){return this instanceof a?(a.TYPED_ARRAY_SUPPORT||(this.length=0,this.parent=void 0),"number"==typeof e?o(this,e):"string"==typeof e?s(this,e,arguments.length>1?arguments[1]:"utf8"):l(this,e)):arguments.length>1?new a(e,arguments[1]):new a(e)}function o(e,n){if(e=p(e,n<0?0:0|f(n)),!a.TYPED_ARRAY_SUPPORT)for(var i=0;i<n;i++)e[i]=0;return e}function s(a,e,n){"string"==typeof n&&""!==n||(n="utf8");var i=0|g(e,n);return a=p(a,i),a.write(e,n),a}function l(e,n){if(a.isBuffer(n))return m(e,n);if(q(n))return c(e,n);if(null==n)throw new TypeError("must start with number, buffer, array or string");if("undefined"!=typeof ArrayBuffer){if(n.buffer instanceof ArrayBuffer)return h(e,n);if(n instanceof ArrayBuffer)return u(e,n)}return n.length?b(e,n):d(e,n)}function m(a,e){var n=0|f(e.length);return a=p(a,n),e.copy(a,0,0,n),a}function c(a,e){var n=0|f(e.length);a=p(a,n);for(var i=0;i<n;i+=1)a[i]=255&e[i];return a}function h(a,e){var n=0|f(e.length);a=p(a,n);for(var i=0;i<n;i+=1)a[i]=255&e[i];return a}function u(e,n){return a.TYPED_ARRAY_SUPPORT?(n.byteLength,e=a._augment(new Uint8Array(n))):e=h(e,new Uint8Array(n)),e}function b(a,e){var n=0|f(e.length);a=p(a,n);for(var i=0;i<n;i+=1)a[i]=255&e[i];return a}function d(a,e){var n,i=0;"Buffer"===e.type&&q(e.data)&&(n=e.data,i=0|f(n.length)),a=p(a,i);for(var t=0;t<i;t+=1)a[t]=255&n[t];return a}function p(e,n){a.TYPED_ARRAY_SUPPORT?(e=a._augment(new Uint8Array(n)),e.__proto__=a.prototype):(e.length=n,e._isBuffer=!0);var i=0!==n&&n<=a.poolSize>>>1;return i&&(e.parent=$),e}function f(a){if(a>=r())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+r().toString(16)+" bytes");return 0|a}function v(e,n){if(!(this instanceof v))return new v(e,n);var i=new a(e,n);return delete i.parent,i}function g(a,e){"string"!=typeof a&&(a=""+a);var n=a.length;if(0===n)return 0;for(var i=!1;;)switch(e){case"ascii":case"binary":case"raw":case"raws":return n;case"utf8":case"utf-8":return H(a).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return W(a).length;default:if(i)return H(a).length;e=(""+e).toLowerCase(),i=!0}}function y(a,e,n){var i=!1;if(e=0|e,n=void 0===n||n===1/0?this.length:0|n,a||(a="utf8"),e<0&&(e=0),n>this.length&&(n=this.length),n<=e)return"";for(;;)switch(a){case"hex":return x(this,e,n);case"utf8":case"utf-8":return R(this,e,n);case"ascii":return E(this,e,n);case"binary":return T(this,e,n);case"base64":return P(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return _(this,e,n);default:if(i)throw new TypeError("Unknown encoding: "+a);a=(a+"").toLowerCase(),i=!0}}function C(a,e,n,i){n=Number(n)||0;var t=a.length-n;i?(i=Number(i),i>t&&(i=t)):i=t;var r=e.length;if(r%2!==0)throw new Error("Invalid hex string");i>r/2&&(i=r/2);for(var o=0;o<i;o++){var s=parseInt(e.substr(2*o,2),16);if(isNaN(s))throw new Error("Invalid hex string");a[n+o]=s}return o}function M(a,e,n,i){return Y(H(e,a.length-n),a,n,i)}function B(a,e,n,i){return Y(K(e),a,n,i)}function S(a,e,n,i){return B(a,e,n,i)}function A(a,e,n,i){return Y(W(e),a,n,i)}function w(a,e,n,i){return Y(J(e,a.length-n),a,n,i)}function P(a,e,n){return 0===e&&n===a.length?j.fromByteArray(a):j.fromByteArray(a.slice(e,n))}function R(a,e,n){n=Math.min(a.length,n);for(var i=[],t=e;t<n;){var r=a[t],o=null,s=r>239?4:r>223?3:r>191?2:1;if(t+s<=n){var l,m,c,h;switch(s){case 1:r<128&&(o=r);break;case 2:l=a[t+1],128===(192&l)&&(h=(31&r)<<6|63&l,h>127&&(o=h));break;case 3:l=a[t+1],m=a[t+2],128===(192&l)&&128===(192&m)&&(h=(15&r)<<12|(63&l)<<6|63&m,h>2047&&(h<55296||h>57343)&&(o=h));break;case 4:l=a[t+1],m=a[t+2],c=a[t+3],128===(192&l)&&128===(192&m)&&128===(192&c)&&(h=(15&r)<<18|(63&l)<<12|(63&m)<<6|63&c,h>65535&&h<1114112&&(o=h))}}null===o?(o=65533,s=1):o>65535&&(o-=65536,i.push(o>>>10&1023|55296),o=56320|1023&o),i.push(o),t+=s}return L(i)}function L(a){var e=a.length;if(e<=X)return String.fromCharCode.apply(String,a);for(var n="",i=0;i<e;)n+=String.fromCharCode.apply(String,a.slice(i,i+=X));return n}function E(a,e,n){var i="";n=Math.min(a.length,n);for(var t=e;t<n;t++)i+=String.fromCharCode(127&a[t]);return i}function T(a,e,n){var i="";n=Math.min(a.length,n);for(var t=e;t<n;t++)i+=String.fromCharCode(a[t]);return i}function x(a,e,n){var i=a.length;(!e||e<0)&&(e=0),(!n||n<0||n>i)&&(n=i);for(var t="",r=e;r<n;r++)t+=V(a[r]);return t}function _(a,e,n){for(var i=a.slice(e,n),t="",r=0;r<i.length;r+=2)t+=String.fromCharCode(i[r]+256*i[r+1]);return t}function D(a,e,n){if(a%1!==0||a<0)throw new RangeError("offset is not uint");if(a+e>n)throw new RangeError("Trying to access beyond buffer length")}function G(e,n,i,t,r,o){if(!a.isBuffer(e))throw new TypeError("buffer must be a Buffer instance");if(n>r||n<o)throw new RangeError("value is out of bounds");if(i+t>e.length)throw new RangeError("index out of range")}function I(a,e,n,i){e<0&&(e=65535+e+1);for(var t=0,r=Math.min(a.length-n,2);t<r;t++)a[n+t]=(e&255<<8*(i?t:1-t))>>>8*(i?t:1-t)}function k(a,e,n,i){e<0&&(e=4294967295+e+1);for(var t=0,r=Math.min(a.length-n,4);t<r;t++)a[n+t]=e>>>8*(i?t:3-t)&255}function N(a,e,n,i,t,r){if(e>t||e<r)throw new RangeError("value is out of bounds");if(n+i>a.length)throw new RangeError("index out of range");if(n<0)throw new RangeError("index out of range")}function z(a,e,n,i,t){return t||N(a,e,n,4,3.4028234663852886e38,-3.4028234663852886e38),Z.write(a,e,n,i,23,4),n+4}function F(a,e,n,i,t){return t||N(a,e,n,8,1.7976931348623157e308,-1.7976931348623157e308),Z.write(a,e,n,i,52,8),n+8}function U(a){if(a=O(a).replace(aa,""),a.length<2)return"";for(;a.length%4!==0;)a+="=";return a}function O(a){return a.trim?a.trim():a.replace(/^\s+|\s+$/g,"")}function V(a){return a<16?"0"+a.toString(16):a.toString(16)}function H(a,e){e=e||1/0;for(var n,i=a.length,t=null,r=[],o=0;o<i;o++){if(n=a.charCodeAt(o),n>55295&&n<57344){if(!t){if(n>56319){(e-=3)>-1&&r.push(239,191,189);continue}if(o+1===i){(e-=3)>-1&&r.push(239,191,189);continue}t=n;continue}if(n<56320){(e-=3)>-1&&r.push(239,191,189),t=n;continue}n=(t-55296<<10|n-56320)+65536}else t&&(e-=3)>-1&&r.push(239,191,189);if(t=null,n<128){if((e-=1)<0)break;r.push(n)}else if(n<2048){if((e-=2)<0)break;r.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;r.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;r.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return r}function K(a){for(var e=[],n=0;n<a.length;n++)e.push(255&a.charCodeAt(n));return e}function J(a,e){for(var n,i,t,r=[],o=0;o<a.length&&!((e-=2)<0);o++)n=a.charCodeAt(o),i=n>>8,t=n%256,r.push(t),r.push(i);return r}function W(a){return j.toByteArray(U(a))}function Y(a,e,n,i){for(var t=0;t<i&&!(t+n>=e.length||t>=a.length);t++)e[t+n]=a[t];return t}var j=n(8),Z=n(9),q=n(10);e.Buffer=a,e.SlowBuffer=v,e.INSPECT_MAX_BYTES=50,a.poolSize=8192;var $={};a.TYPED_ARRAY_SUPPORT=void 0!==i.TYPED_ARRAY_SUPPORT?i.TYPED_ARRAY_SUPPORT:t(),a.TYPED_ARRAY_SUPPORT?(a.prototype.__proto__=Uint8Array.prototype,a.__proto__=Uint8Array):(a.prototype.length=void 0,a.prototype.parent=void 0),a.isBuffer=function(a){return!(null==a||!a._isBuffer)},a.compare=function(e,n){if(!a.isBuffer(e)||!a.isBuffer(n))throw new TypeError("Arguments must be Buffers");if(e===n)return 0;for(var i=e.length,t=n.length,r=0,o=Math.min(i,t);r<o&&e[r]===n[r];)++r;return r!==o&&(i=e[r],t=n[r]),i<t?-1:t<i?1:0},a.isEncoding=function(a){switch(String(a).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"raw":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},a.concat=function(e,n){if(!q(e))throw new TypeError("list argument must be an Array of Buffers.");if(0===e.length)return new a(0);var i;if(void 0===n)for(n=0,i=0;i<e.length;i++)n+=e[i].length;var t=new a(n),r=0;for(i=0;i<e.length;i++){var o=e[i];o.copy(t,r),r+=o.length}return t},a.byteLength=g,a.prototype.toString=function(){var a=0|this.length;return 0===a?"":0===arguments.length?R(this,0,a):y.apply(this,arguments)},a.prototype.equals=function(e){if(!a.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===a.compare(this,e)},a.prototype.inspect=function(){var a="",n=e.INSPECT_MAX_BYTES;return this.length>0&&(a=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(a+=" ... ")),"<Buffer "+a+">"},a.prototype.compare=function(e){if(!a.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e?0:a.compare(this,e)},a.prototype.indexOf=function(e,n){function i(a,e,n){for(var i=-1,t=0;n+t<a.length;t++)if(a[n+t]===e[i===-1?0:t-i]){if(i===-1&&(i=t),t-i+1===e.length)return n+i}else i=-1;return-1}if(n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n>>=0,0===this.length)return-1;if(n>=this.length)return-1;if(n<0&&(n=Math.max(this.length+n,0)),"string"==typeof e)return 0===e.length?-1:String.prototype.indexOf.call(this,e,n);if(a.isBuffer(e))return i(this,e,n);if("number"==typeof e)return a.TYPED_ARRAY_SUPPORT&&"function"===Uint8Array.prototype.indexOf?Uint8Array.prototype.indexOf.call(this,e,n):i(this,[e],n);throw new TypeError("val must be string, number or Buffer")},a.prototype.get=function(a){return console.log(".get() is deprecated. Access using array indexes instead."),this.readUInt8(a)},a.prototype.set=function(a,e){return console.log(".set() is deprecated. Access using array indexes instead."),this.writeUInt8(a,e)},a.prototype.write=function(a,e,n,i){if(void 0===e)i="utf8",n=this.length,e=0;else if(void 0===n&&"string"==typeof e)i=e,n=this.length,e=0;else if(isFinite(e))e=0|e,isFinite(n)?(n=0|n,void 0===i&&(i="utf8")):(i=n,n=void 0);else{var t=i;i=e,e=0|n,n=t}var r=this.length-e;if((void 0===n||n>r)&&(n=r),a.length>0&&(n<0||e<0)||e>this.length)throw new RangeError("attempt to write outside buffer bounds");i||(i="utf8");for(var o=!1;;)switch(i){case"hex":return C(this,a,e,n);case"utf8":case"utf-8":return M(this,a,e,n);case"ascii":return B(this,a,e,n);case"binary":return S(this,a,e,n);case"base64":return A(this,a,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return w(this,a,e,n);default:if(o)throw new TypeError("Unknown encoding: "+i);i=(""+i).toLowerCase(),o=!0}},a.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var X=4096;a.prototype.slice=function(e,n){var i=this.length;e=~~e,n=void 0===n?i:~~n,e<0?(e+=i,e<0&&(e=0)):e>i&&(e=i),n<0?(n+=i,n<0&&(n=0)):n>i&&(n=i),n<e&&(n=e);var t;if(a.TYPED_ARRAY_SUPPORT)t=a._augment(this.subarray(e,n));else{var r=n-e;t=new a(r,(void 0));for(var o=0;o<r;o++)t[o]=this[o+e]}return t.length&&(t.parent=this.parent||this),t},a.prototype.readUIntLE=function(a,e,n){a=0|a,e=0|e,n||D(a,e,this.length);for(var i=this[a],t=1,r=0;++r<e&&(t*=256);)i+=this[a+r]*t;return i},a.prototype.readUIntBE=function(a,e,n){a=0|a,e=0|e,n||D(a,e,this.length);for(var i=this[a+--e],t=1;e>0&&(t*=256);)i+=this[a+--e]*t;return i},a.prototype.readUInt8=function(a,e){return e||D(a,1,this.length),this[a]},a.prototype.readUInt16LE=function(a,e){return e||D(a,2,this.length),this[a]|this[a+1]<<8},a.prototype.readUInt16BE=function(a,e){return e||D(a,2,this.length),this[a]<<8|this[a+1]},a.prototype.readUInt32LE=function(a,e){return e||D(a,4,this.length),(this[a]|this[a+1]<<8|this[a+2]<<16)+16777216*this[a+3]},a.prototype.readUInt32BE=function(a,e){return e||D(a,4,this.length),16777216*this[a]+(this[a+1]<<16|this[a+2]<<8|this[a+3])},a.prototype.readIntLE=function(a,e,n){a=0|a,e=0|e,n||D(a,e,this.length);for(var i=this[a],t=1,r=0;++r<e&&(t*=256);)i+=this[a+r]*t;return t*=128,i>=t&&(i-=Math.pow(2,8*e)),i},a.prototype.readIntBE=function(a,e,n){a=0|a,e=0|e,n||D(a,e,this.length);for(var i=e,t=1,r=this[a+--i];i>0&&(t*=256);)r+=this[a+--i]*t;return t*=128,r>=t&&(r-=Math.pow(2,8*e)),r},a.prototype.readInt8=function(a,e){return e||D(a,1,this.length),128&this[a]?(255-this[a]+1)*-1:this[a]},a.prototype.readInt16LE=function(a,e){e||D(a,2,this.length);var n=this[a]|this[a+1]<<8;return 32768&n?4294901760|n:n},a.prototype.readInt16BE=function(a,e){e||D(a,2,this.length);var n=this[a+1]|this[a]<<8;return 32768&n?4294901760|n:n},a.prototype.readInt32LE=function(a,e){return e||D(a,4,this.length),this[a]|this[a+1]<<8|this[a+2]<<16|this[a+3]<<24},a.prototype.readInt32BE=function(a,e){return e||D(a,4,this.length),this[a]<<24|this[a+1]<<16|this[a+2]<<8|this[a+3]},a.prototype.readFloatLE=function(a,e){return e||D(a,4,this.length),Z.read(this,a,!0,23,4)},a.prototype.readFloatBE=function(a,e){return e||D(a,4,this.length),Z.read(this,a,!1,23,4)},a.prototype.readDoubleLE=function(a,e){return e||D(a,8,this.length),Z.read(this,a,!0,52,8)},a.prototype.readDoubleBE=function(a,e){return e||D(a,8,this.length),Z.read(this,a,!1,52,8)},a.prototype.writeUIntLE=function(a,e,n,i){a=+a,e=0|e,n=0|n,i||G(this,a,e,n,Math.pow(2,8*n),0);var t=1,r=0;for(this[e]=255&a;++r<n&&(t*=256);)this[e+r]=a/t&255;return e+n},a.prototype.writeUIntBE=function(a,e,n,i){a=+a,e=0|e,n=0|n,i||G(this,a,e,n,Math.pow(2,8*n),0);var t=n-1,r=1;for(this[e+t]=255&a;--t>=0&&(r*=256);)this[e+t]=a/r&255;return e+n},a.prototype.writeUInt8=function(e,n,i){return e=+e,n=0|n,i||G(this,e,n,1,255,0),a.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[n]=255&e,n+1},a.prototype.writeUInt16LE=function(e,n,i){return e=+e,n=0|n,i||G(this,e,n,2,65535,0),a.TYPED_ARRAY_SUPPORT?(this[n]=255&e,this[n+1]=e>>>8):I(this,e,n,!0),n+2},a.prototype.writeUInt16BE=function(e,n,i){return e=+e,n=0|n,i||G(this,e,n,2,65535,0),a.TYPED_ARRAY_SUPPORT?(this[n]=e>>>8,this[n+1]=255&e):I(this,e,n,!1),n+2},a.prototype.writeUInt32LE=function(e,n,i){return e=+e,n=0|n,i||G(this,e,n,4,4294967295,0),a.TYPED_ARRAY_SUPPORT?(this[n+3]=e>>>24,this[n+2]=e>>>16,this[n+1]=e>>>8,this[n]=255&e):k(this,e,n,!0),n+4},a.prototype.writeUInt32BE=function(e,n,i){return e=+e,n=0|n,i||G(this,e,n,4,4294967295,0),a.TYPED_ARRAY_SUPPORT?(this[n]=e>>>24,this[n+1]=e>>>16,this[n+2]=e>>>8,this[n+3]=255&e):k(this,e,n,!1),n+4},a.prototype.writeIntLE=function(a,e,n,i){if(a=+a,e=0|e,!i){var t=Math.pow(2,8*n-1);G(this,a,e,n,t-1,-t)}var r=0,o=1,s=a<0?1:0;for(this[e]=255&a;++r<n&&(o*=256);)this[e+r]=(a/o>>0)-s&255;return e+n},a.prototype.writeIntBE=function(a,e,n,i){if(a=+a,e=0|e,!i){var t=Math.pow(2,8*n-1);G(this,a,e,n,t-1,-t)}var r=n-1,o=1,s=a<0?1:0;for(this[e+r]=255&a;--r>=0&&(o*=256);)this[e+r]=(a/o>>0)-s&255;return e+n},a.prototype.writeInt8=function(e,n,i){return e=+e,n=0|n,i||G(this,e,n,1,127,-128),a.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[n]=255&e,n+1},a.prototype.writeInt16LE=function(e,n,i){return e=+e,n=0|n,i||G(this,e,n,2,32767,-32768),a.TYPED_ARRAY_SUPPORT?(this[n]=255&e,this[n+1]=e>>>8):I(this,e,n,!0),n+2},a.prototype.writeInt16BE=function(e,n,i){return e=+e,n=0|n,i||G(this,e,n,2,32767,-32768),a.TYPED_ARRAY_SUPPORT?(this[n]=e>>>8,this[n+1]=255&e):I(this,e,n,!1),n+2},a.prototype.writeInt32LE=function(e,n,i){return e=+e,n=0|n,i||G(this,e,n,4,2147483647,-2147483648),a.TYPED_ARRAY_SUPPORT?(this[n]=255&e,this[n+1]=e>>>8,this[n+2]=e>>>16,this[n+3]=e>>>24):k(this,e,n,!0),n+4},a.prototype.writeInt32BE=function(e,n,i){return e=+e,n=0|n,i||G(this,e,n,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),a.TYPED_ARRAY_SUPPORT?(this[n]=e>>>24,this[n+1]=e>>>16,this[n+2]=e>>>8,this[n+3]=255&e):k(this,e,n,!1),n+4},a.prototype.writeFloatLE=function(a,e,n){return z(this,a,e,!0,n)},a.prototype.writeFloatBE=function(a,e,n){return z(this,a,e,!1,n)},a.prototype.writeDoubleLE=function(a,e,n){return F(this,a,e,!0,n)},a.prototype.writeDoubleBE=function(a,e,n){return F(this,a,e,!1,n)},a.prototype.copy=function(e,n,i,t){if(i||(i=0),t||0===t||(t=this.length),n>=e.length&&(n=e.length),n||(n=0),t>0&&t<i&&(t=i),t===i)return 0;if(0===e.length||0===this.length)return 0;if(n<0)throw new RangeError("targetStart out of bounds");if(i<0||i>=this.length)throw new RangeError("sourceStart out of bounds");if(t<0)throw new RangeError("sourceEnd out of bounds");t>this.length&&(t=this.length),e.length-n<t-i&&(t=e.length-n+i);var r,o=t-i;if(this===e&&i<n&&n<t)for(r=o-1;r>=0;r--)e[r+n]=this[r+i];else if(o<1e3||!a.TYPED_ARRAY_SUPPORT)for(r=0;r<o;r++)e[r+n]=this[r+i];else e._set(this.subarray(i,i+o),n);return o},a.prototype.fill=function(a,e,n){if(a||(a=0),e||(e=0),n||(n=this.length),n<e)throw new RangeError("end < start");if(n!==e&&0!==this.length){if(e<0||e>=this.length)throw new RangeError("start out of bounds");if(n<0||n>this.length)throw new RangeError("end out of bounds");var i;if("number"==typeof a)for(i=e;i<n;i++)this[i]=a;else{var t=H(a.toString()),r=t.length;for(i=e;i<n;i++)this[i]=t[i%r]}return this}},a.prototype.toArrayBuffer=function(){if("undefined"!=typeof Uint8Array){if(a.TYPED_ARRAY_SUPPORT)return new a(this).buffer;for(var e=new Uint8Array(this.length),n=0,i=e.length;n<i;n+=1)e[n]=this[n];return e.buffer}throw new TypeError("Buffer.toArrayBuffer not supported in this browser")};var Q=a.prototype;a._augment=function(e){return e.constructor=a,e._isBuffer=!0,e._set=e.set,e.get=Q.get,e.set=Q.set,e.write=Q.write,e.toString=Q.toString,e.toLocaleString=Q.toString,e.toJSON=Q.toJSON,e.equals=Q.equals,e.compare=Q.compare,e.indexOf=Q.indexOf,e.copy=Q.copy,e.slice=Q.slice,e.readUIntLE=Q.readUIntLE,e.readUIntBE=Q.readUIntBE,e.readUInt8=Q.readUInt8,e.readUInt16LE=Q.readUInt16LE,e.readUInt16BE=Q.readUInt16BE,e.readUInt32LE=Q.readUInt32LE,e.readUInt32BE=Q.readUInt32BE,e.readIntLE=Q.readIntLE,e.readIntBE=Q.readIntBE,e.readInt8=Q.readInt8,e.readInt16LE=Q.readInt16LE,e.readInt16BE=Q.readInt16BE,e.readInt32LE=Q.readInt32LE,e.readInt32BE=Q.readInt32BE,e.readFloatLE=Q.readFloatLE,e.readFloatBE=Q.readFloatBE,e.readDoubleLE=Q.readDoubleLE,e.readDoubleBE=Q.readDoubleBE,e.writeUInt8=Q.writeUInt8,e.writeUIntLE=Q.writeUIntLE,e.writeUIntBE=Q.writeUIntBE,e.writeUInt16LE=Q.writeUInt16LE,e.writeUInt16BE=Q.writeUInt16BE,e.writeUInt32LE=Q.writeUInt32LE,e.writeUInt32BE=Q.writeUInt32BE,e.writeIntLE=Q.writeIntLE,e.writeIntBE=Q.writeIntBE,e.writeInt8=Q.writeInt8,e.writeInt16LE=Q.writeInt16LE,e.writeInt16BE=Q.writeInt16BE,e.writeInt32LE=Q.writeInt32LE,e.writeInt32BE=Q.writeInt32BE,e.writeFloatLE=Q.writeFloatLE,e.writeFloatBE=Q.writeFloatBE,e.writeDoubleLE=Q.writeDoubleLE,e.writeDoubleBE=Q.writeDoubleBE,e.fill=Q.fill,e.inspect=Q.inspect,e.toArrayBuffer=Q.toArrayBuffer,e};var aa=/[^+\/0-9A-Za-z-_]/g}).call(e,n(7).Buffer,function(){return this}())},function(a,e,n){var i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";!function(a){"use strict";function e(a){var e=a.charCodeAt(0);return e===o||e===h?62:e===s||e===u?63:e<l?-1:e<l+10?e-l+26+26:e<c+26?e-c:e<m+26?e-m+26:void 0}function n(a){function n(a){m[h++]=a}var i,t,o,s,l,m;if(a.length%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var c=a.length;l="="===a.charAt(c-2)?2:"="===a.charAt(c-1)?1:0,m=new r(3*a.length/4-l),o=l>0?a.length-4:a.length;var h=0;for(i=0,t=0;i<o;i+=4,t+=3)s=e(a.charAt(i))<<18|e(a.charAt(i+1))<<12|e(a.charAt(i+2))<<6|e(a.charAt(i+3)),n((16711680&s)>>16),n((65280&s)>>8),n(255&s);return 2===l?(s=e(a.charAt(i))<<2|e(a.charAt(i+1))>>4,n(255&s)):1===l&&(s=e(a.charAt(i))<<10|e(a.charAt(i+1))<<4|e(a.charAt(i+2))>>2,n(s>>8&255),n(255&s)),m}function t(a){function e(a){return i.charAt(a)}function n(a){return e(a>>18&63)+e(a>>12&63)+e(a>>6&63)+e(63&a)}var t,r,o,s=a.length%3,l="";for(t=0,o=a.length-s;t<o;t+=3)r=(a[t]<<16)+(a[t+1]<<8)+a[t+2],l+=n(r);switch(s){case 1:r=a[a.length-1],l+=e(r>>2),l+=e(r<<4&63),l+="==";break;case 2:r=(a[a.length-2]<<8)+a[a.length-1],l+=e(r>>10),l+=e(r>>4&63),l+=e(r<<2&63),l+="="}return l}var r="undefined"!=typeof Uint8Array?Uint8Array:Array,o="+".charCodeAt(0),s="/".charCodeAt(0),l="0".charCodeAt(0),m="a".charCodeAt(0),c="A".charCodeAt(0),h="-".charCodeAt(0),u="_".charCodeAt(0);a.toByteArray=n,a.fromByteArray=t}(e)},function(a,e){e.read=function(a,e,n,i,t){var r,o,s=8*t-i-1,l=(1<<s)-1,m=l>>1,c=-7,h=n?t-1:0,u=n?-1:1,b=a[e+h];for(h+=u,r=b&(1<<-c)-1,b>>=-c,c+=s;c>0;r=256*r+a[e+h],h+=u,c-=8);for(o=r&(1<<-c)-1,r>>=-c,c+=i;c>0;o=256*o+a[e+h],h+=u,c-=8);if(0===r)r=1-m;else{if(r===l)return o?NaN:(b?-1:1)*(1/0);o+=Math.pow(2,i),r-=m}return(b?-1:1)*o*Math.pow(2,r-i)},e.write=function(a,e,n,i,t,r){var o,s,l,m=8*r-t-1,c=(1<<m)-1,h=c>>1,u=23===t?Math.pow(2,-24)-Math.pow(2,-77):0,b=i?0:r-1,d=i?1:-1,p=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(s=isNaN(e)?1:0,o=c):(o=Math.floor(Math.log(e)/Math.LN2),e*(l=Math.pow(2,-o))<1&&(o--,l*=2),e+=o+h>=1?u/l:u*Math.pow(2,1-h),e*l>=2&&(o++,l/=2),o+h>=c?(s=0,o=c):o+h>=1?(s=(e*l-1)*Math.pow(2,t),o+=h):(s=e*Math.pow(2,h-1)*Math.pow(2,t),o=0));t>=8;a[n+b]=255&s,b+=d,s/=256,t-=8);for(o=o<<t|s,m+=t;m>0;a[n+b]=255&o,b+=d,o/=256,m-=8);a[n+b-d]|=128*p}},function(a,e){var n={}.toString;a.exports=Array.isArray||function(a){return"[object Array]"==n.call(a)}},function(a,e,n){var i=n(12),t=n(6),r=function(a,e){this.id="pieChart_"+(new Date).getTime(),this.title="Pie chart";var n=this;e.getEventResume().then(function(e){var i=[],r=[];$.each(e,function(a,e){i.push(e.event_name),r.push(e.count)});var o=[],s=[],l=new t;$.each(r,function(){for(var a=l.color();o.indexOf(a)>0;)a=l.color();for(var e=l.color();s.indexOf(e)>0;)e=l.color();o.push(a),s.push(e)});new Chart($("#"+n.id),{type:"pie",data:{labels:i,datasets:[{label:"Number of events",data:r,backgroundColor:o,borderColor:s,borderWidth:1}]},options:{}});a.$apply()}).fail(function(a){console.log(a)})};r.$inject=["$scope","stats"],a.exports=function(a){a.component("pieChart",{template:i,controller:r,bindings:{}})}},function(a,e){a.exports='\n\n<div class="pieChartContainer">\n\n  <h2>{{$ctrl.title}}</h2>\n\n  <canvas id="{{$ctrl.id}}" style="width: 400px; height: 400px;"></canvas>\n\n</div>'},function(a,e,n){var i=n(14),t=function(a,e,n){var i=this;n.getEventList().then(function(a){i.eventList=a,e.$apply()})};t.$inject=["$http","$scope","stats"],a.exports=function(a){a.component("eventList",{template:i,controller:t,bindings:{}})}},function(a,e){a.exports='\n<div class="eventListContainer">\n\n  <h2>Event list</h2>\n\n  <div style="overflow: auto">\n    <div ng-repeat="(i, val) in $ctrl.eventList">{{i + 1}}. {{val}}</div>\n  </div>\n\n</div>'},function(a,e,n){var i=n(16),t=function(a,e,n){var i=this;n.getEventResume().then(function(a){i.eventResume=a,e.$apply()})};t.$inject=["$http","$scope","stats"],a.exports=function(a){a.component("eventResume",{template:i,controller:t,bindings:{}})}},function(a,e){a.exports='<div class="eventResumeContainer">\n\n  <h2>Event resume</h2>\n\n  <div style="overflow: auto">\n    <div ng-repeat="(i, val) in $ctrl.eventResume">{{i + 1}}. {{val.event_name + ": " + val.count}}\n    </div>\n  </div>\n\n</div>'}]);